{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Paginations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst Paginations = props => {\n  _s();\n\n  const {\n    totalRecords,\n    pageLimit,\n    pageNeighbours,\n    onPageChanged,\n    currentPage\n  } = props;\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\n  }, []);\n\n  const fetchPageNumbers = () => {\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = totalPages - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        case hasLeftSpill && !hasRightSpill:\n          {\n            const extraPages = range(startPage - spillOffset, startPage - 1);\n            pages = [LEFT_PAGE, ...extraPages, ...pages];\n            break;\n          }\n\n        case hasLeftSpill && hasRightSpill:\n        default:\n          {\n            pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n            break;\n          }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  const pages = fetchPageNumbers() || [];\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"Countries Pagination\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pages.map((page, index) => {\n        if (page === LEFT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"page-link\",\n            \"aria-label\": \"Previous\",\n            onClick: e => onPageChanged(e, pageNeighbours * 2 - 1),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xAB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this);\n        if (page === RIGHT_PAGE) return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"/\",\n            \"aria-label\": \"Next\",\n            onClick: e => onPageChanged(e, pageNeighbours * 2 + 1),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xBB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item${currentPage === page ? \" active\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"/\",\n            onClick: e => onPageChanged(e, page),\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Paginations, \"X7V+9eWe4+6AqnnCekDmHCzUxek=\");\n\n_c = Paginations;\nexport default Paginations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginations\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Paginations.js"],"names":["React","useState","useEffect","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Paginations","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","totalPages","setTotalPages","Math","ceil","fetchPageNumbers","totalNumbers","totalBlocks","startPage","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","map","page","index","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Paginations = (props) => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n  }, []);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = totalPages - endPage > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        case hasLeftSpill && !hasRightSpill: {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n        case hasLeftSpill && hasRightSpill:\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n      return [1, ...pages, totalPages];\r\n    }\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n  return (\r\n    <nav aria-label=\"Countries Pagination\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page, index) => {\r\n          if (page === LEFT_PAGE)\r\n            return (\r\n              <li key={index} className=\"page-item\">\r\n                <a\r\n                  href=\"/\"\r\n                  className=\"page-link\"\r\n                  aria-label=\"Previous\"\r\n                  onClick={(e) => onPageChanged(e, pageNeighbours * 2 - 1)}\r\n                >\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n                  <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n              </li>\r\n            );\r\n\r\n          if (page === RIGHT_PAGE)\r\n            return (\r\n              <li key={index} className=\"page-item\">\r\n                <a\r\n                  className=\"page-link\"\r\n                  href=\"/\"\r\n                  aria-label=\"Next\"\r\n                  onClick={(e) => onPageChanged(e, pageNeighbours * 2 + 1)}\r\n                >\r\n                  <span aria-hidden=\"true\">&raquo;</span>\r\n                  <span className=\"sr-only\">Next</span>\r\n                </a>\r\n              </li>\r\n            );\r\n\r\n          return (\r\n            <li\r\n              key={index}\r\n              className={`page-item${currentPage === page ? \" active\" : \"\"}`}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"/\"\r\n                onClick={(e) => onPageChanged(e, page)}\r\n              >\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Paginations;"]},"metadata":{},"sourceType":"module"}