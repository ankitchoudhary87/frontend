{"ast":null,"code":"import _regeneratorRuntime from\"C:/Projects/whosin/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Projects/whosin/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Projects/whosin/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Projects/whosin/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Projects/whosin/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,Spinner}from'react-bootstrap';import useValidator from'./useValidator';import{addTasklist}from'../Services/userapi';import{useCookies}from'react-cookie';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Dashboard=function Dashboard(props){var _useCookies=useCookies([]),_useCookies2=_slicedToArray(_useCookies,2),cookies=_useCookies2[0],setCookie=_useCookies2[1];var loggedInUserId=\"\";var storedData=JSON.parse(localStorage.getItem(\"MyUser\"));if(storedData){loggedInUserId=storedData.user_id;if(!cookies.userid){setCookie('userid',loggedInUserId,{path:'/'});}}var _useValidator=useValidator(),_useValidator2=_slicedToArray(_useValidator,2),validator=_useValidator2[0],showValidationMessage=_useValidator2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({tasklistname:\"\",taskchallenge:\"\",user_id:\"\"}),_useState4=_slicedToArray(_useState3,2),tasklist=_useState4[0],setTasklist=_useState4[1];// set the props as a default user_id in tasklist state\nuseEffect(function(){if(props.loggedinuser.user_id){setTasklist(_objectSpread(_objectSpread({},tasklist),{},{user_id:props.loggedinuser.user_id}));}},[props.loggedinuser.user_id]);// eslint-disable-line react-hooks/exhaustive-deps\nvar inputVal=function inputVal(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setTasklist(_objectSpread(_objectSpread({},tasklist),{},_defineProperty({},name,value)));};var submittasklist=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!validator.allValid()){_context.next=9;break;}setLoading(true);_context.next=5;return addTasklist(tasklist);case 5:res=_context.sent;if(res.data.message===\"Tasklist Added Successfully\"){alert(res.data.message);setLoading(false);setTasklist({tasklistname:\"\",taskchallenge:\"\",user_id:props.loggedinuser.user_id});}else{setLoading(false);alert(res.data.message);}_context.next=10;break;case 9:showValidationMessage(true);case 10:case\"end\":return _context.stop();}}},_callee);}));return function submittasklist(_x){return _ref.apply(this,arguments);};}();//console.log(\"AAAA\", tasklist)\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"outsider\",children:/*#__PURE__*/_jsx(\"div\",{className:\"login\",style:{maxWidth:'70%'},children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){submittasklist(e);},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',fontSize:'18px'},children:\"Enter Your Tasklist and Task Challenge\"}),/*#__PURE__*/_jsx(\"textarea\",{style:{height:'120px'},className:\"newinputval\",value:tasklist.tasklistname,placeholder:\"Enter your tasklist\",name:\"tasklistname\",onChange:inputVal}),validator.message('tasklistname',tasklist.tasklistname,'required',{className:'text-danger spaceparttasklist',messages:{required:\"Tasklist is required\"}}),/*#__PURE__*/_jsx(\"textarea\",{style:{height:'100px'},className:\"newinputval\",value:tasklist.taskchallenge,placeholder:\"Enter your task challenge\",name:\"taskchallenge\",onChange:inputVal}),!loading?/*#__PURE__*/_jsx(Button,{type:\"submit\",style:{marginTop:'15px',width:'auto',background:'rgba(237, 28, 36, 1)',borderRadius:'3px',border:'0 none',padding:'15px 42px',fontSize:'16px',fontWeight:'500',lineHeight:'16px',cursor:'pointer',textTransform:'capitalize',color:'rgba(255, 255, 255, 1)'},children:\"Add Tasklist\"}):/*#__PURE__*/_jsxs(Button,{variant:\"primary\",style:{marginTop:'15px',width:'auto',background:'rgba(237, 28, 36, 1)',borderRadius:'3px',border:'0 none',padding:'15px 42px',fontSize:'16px',fontWeight:'500',lineHeight:'16px',cursor:'pointer',textTransform:'capitalize',color:'rgba(255, 255, 255, 1)'},disabled:true,children:[/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"grow\",size:\"sm\",role:\"status\",\"aria-hidden\":\"true\"}),\"Loading...\"]})]})})})});};export default Dashboard;","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Dashboard.js"],"names":["React","useState","useEffect","Button","Spinner","useValidator","addTasklist","useCookies","Dashboard","props","cookies","setCookie","loggedInUserId","storedData","JSON","parse","localStorage","getItem","user_id","userid","path","validator","showValidationMessage","loading","setLoading","tasklistname","taskchallenge","tasklist","setTasklist","loggedinuser","inputVal","e","target","name","value","submittasklist","preventDefault","allValid","res","data","message","alert","maxWidth","display","justifyContent","fontSize","height","className","messages","required","marginTop","width","background","borderRadius","border","padding","fontWeight","lineHeight","cursor","textTransform","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport useValidator from './useValidator'\r\nimport { addTasklist } from '../Services/userapi'\r\nimport { useCookies } from 'react-cookie';\r\nconst Dashboard = (props) => {\r\n    const [cookies, setCookie] = useCookies([]);\r\n    let loggedInUserId = \"\";\r\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n    if (storedData) {\r\n        loggedInUserId = storedData.user_id;\r\n        if(!cookies.userid){\r\n            setCookie('userid', loggedInUserId, { path: '/' });\r\n        }\r\n    }\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [loading, setLoading] = useState(false);\r\n    const [tasklist, setTasklist] = useState({\r\n        tasklistname: \"\",\r\n        taskchallenge: \"\",\r\n        user_id: \"\"\r\n    })\r\n    \r\n    // set the props as a default user_id in tasklist state\r\n    useEffect(() => {\r\n        if (props.loggedinuser.user_id) {\r\n            setTasklist({ ...tasklist, user_id: props.loggedinuser.user_id });\r\n        }\r\n    }, [props.loggedinuser.user_id]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setTasklist({\r\n            ...tasklist,\r\n            [name]: value\r\n        })\r\n    }\r\n    const submittasklist = async (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setLoading(true);\r\n            let res = await addTasklist(tasklist);\r\n            if (res.data.message === \"Tasklist Added Successfully\") {\r\n                alert(res.data.message)\r\n                setLoading(false);\r\n                setTasklist({\r\n                    tasklistname: \"\",\r\n                    taskchallenge: \"\",\r\n                    user_id: props.loggedinuser.user_id\r\n                })\r\n            } else {\r\n                setLoading(false);\r\n                alert(res.data.message)\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //console.log(\"AAAA\", tasklist)\r\n    return (\r\n        <>\r\n            <div className=\"outsider\">\r\n                <div className=\"login\" style={{ maxWidth: '70%' }}>\r\n                    <form onSubmit={(e) => { submittasklist(e) }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'center', fontSize: '18px' }}>Enter Your Tasklist and Task Challenge</div>\r\n                        <textarea style={{ height: '120px' }} className=\"newinputval\" value={tasklist.tasklistname} placeholder=\"Enter your tasklist\" name=\"tasklistname\" onChange={inputVal} />\r\n                        {/**********   This is where the magic happens     ***********/}\r\n                        {validator.message('tasklistname', tasklist.tasklistname, 'required', {\r\n                            className: 'text-danger spaceparttasklist',\r\n                            messages: {\r\n                                required: \"Tasklist is required\"\r\n                            }\r\n                        })}\r\n\r\n                        <textarea style={{ height: '100px' }} className=\"newinputval\" value={tasklist.taskchallenge} placeholder=\"Enter your task challenge\" name=\"taskchallenge\" onChange={inputVal} />\r\n                        {/*validator.message('taskchallenge', tasklist.taskchallenge, 'required', {\r\n                            className: 'text-danger spaceparttasklist',\r\n                            messages: {\r\n                                required: \"Task challenge is required\"\r\n                            }\r\n                        })*/}\r\n\r\n                        {!loading ? <Button type=\"submit\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Add Tasklist</Button> : <Button variant=\"primary\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}