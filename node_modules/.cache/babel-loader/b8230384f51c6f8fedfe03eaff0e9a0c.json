{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\whosin\\\\Frontend\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outsider\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            loginUser(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"outsider\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 12,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"newinputval\",\n                type: \"text\",\n                value: user.email,\n                placeholder: \"Enter your username\",\n                name: \"email\",\n                onChange: inputVal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 25\n              }, this), validator.message('email', user.email, 'required', {\n                className: 'text-danger spacepart',\n                messages: {\n                  required: \"Username is required\",\n                  marginTop: '-6px'\n                }\n              }), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"newinputval\",\n                type: \"password\",\n                value: user.password,\n                autoComplete: \"on\",\n                placeholder: \"Enter your password\",\n                name: \"password\",\n                onChange: inputVal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, this), validator.message('password', user.password, 'required|min:4|max:12', {\n                className: 'text-danger spacepart',\n                messages: {\n                  required: \"Password is required\"\n                }\n              }), !loading ? /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                style: {\n                  marginTop: '15px',\n                  width: 'auto',\n                  background: 'rgba(237, 28, 36, 1)',\n                  borderRadius: '3px',\n                  border: '0 none',\n                  padding: '15px 42px',\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  lineHeight: '16px',\n                  cursor: 'pointer',\n                  textTransform: 'capitalize',\n                  color: 'rgba(255, 255, 255, 1)'\n                },\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                style: {\n                  marginTop: '15px',\n                  width: 'auto',\n                  background: 'rgba(237, 28, 36, 1)',\n                  borderRadius: '3px',\n                  border: '0 none',\n                  padding: '15px 42px',\n                  fontSize: '16px',\n                  fontWeight: '500',\n                  lineHeight: '16px',\n                  cursor: 'pointer',\n                  textTransform: 'capitalize',\n                  color: 'rgba(255, 255, 255, 1)'\n                },\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"grow\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 29\n                }, this), \"Loading...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 346\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Dashboard.js"],"names":["React","Dashboard","props","console","log","e","loginUser","user","email","inputVal","validator","message","className","messages","required","marginTop","password","loading","width","background","borderRadius","border","padding","fontSize","fontWeight","lineHeight","cursor","textTransform","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nconst Dashboard = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <>\r\n            <div className=\"outsider\">\r\n                <div className=\"dashboard\">\r\n                <form onSubmit={(e) => { loginUser(e) }}>\r\n                {/* onChange={(e)=>{setUser({...user, f_name: e.target.value})}} */}\r\n                <div className=\"outsider\">\r\n                    <div className=\"login\">\r\n                    <div className=\"user_img\"></div>\r\n                        <br/>\r\n                        \r\n                        <input className=\"newinputval\" type=\"text\" value={user.email} placeholder=\"Enter your username\" name=\"email\" onChange={inputVal} />\r\n                        {/**********   This is where the magic happens     ***********/}\r\n                        {validator.message('email', user.email, 'required', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Username is required\",\r\n                                marginTop: '-6px'\r\n                            }\r\n                        })}\r\n\r\n                        <input className=\"newinputval\" type=\"password\" value={user.password} autoComplete=\"on\" placeholder=\"Enter your password\" name=\"password\" onChange={inputVal} />\r\n                        {validator.message('password', user.password, 'required|min:4|max:12', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Password is required\"\r\n                            }\r\n                        })}\r\n\r\n\r\n                        { /* onClick={(e) => { loginUser(e) }} */}\r\n                        {!loading ? <Button type=\"submit\" style={{ marginTop: '15px', width:'auto', background:'rgba(237, 28, 36, 1)', borderRadius:'3px', border:'0 none', padding:'15px 42px', fontSize:'16px', fontWeight:'500', lineHeight:'16px', cursor:'pointer', textTransform: 'capitalize', color:'rgba(255, 255, 255, 1)' }}>Login</Button> : <Button variant=\"primary\" style={{ marginTop: '15px', width:'auto', background:'rgba(237, 28, 36, 1)', borderRadius:'3px', border:'0 none', padding:'15px 42px', fontSize:'16px', fontWeight:'500', lineHeight:'16px', cursor:'pointer', textTransform: 'capitalize', color:'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>}\r\n                            <br/>\r\n                        {/* <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/register\") }}>Register  OR <Link to=\"/register\">Register</Link> </div>\r\n                    */}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}