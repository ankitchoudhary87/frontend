{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\whosin\\\\Frontend\\\\src\\\\components\\\\Dashboardgh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ghUserData } from '../Services/userapi';\nimport Tasklist from '../components/Tasklist';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboardgh = props => {\n  _s();\n\n  const [userlist, setUserlist] = useState([]);\n  const [dateseven, setDateseven] = useState([]);\n  const [tasklist, setTasklist] = useState([]);\n  const [searchval, setSearchval] = useState({\n    start_date: new Date(),\n    end_date: new Date(),\n    resource: \"\",\n    gh_id: \"\"\n  });\n  useEffect(() => {\n    const formatDate = date => {\n      var dd = date.getDate();\n      var mm = date.getMonth() + 1;\n      var yyyy = date.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      date = yyyy + '-' + mm + '-' + dd;\n      return date;\n    };\n\n    var result = [];\n\n    for (var i = 0; i < 7; i++) {\n      var d = new Date();\n      d.setDate(d.getDate() - i);\n      result.push(formatDate(d));\n    }\n\n    setDateseven(result);\n  }, []);\n  useEffect(() => {\n    const getUserList = async () => {\n      const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n      setSearchval({ ...searchval,\n        gh_id: storedData.user_id\n      });\n      console.log(\"Daaaa\", searchval);\n      let res = await ghUserData(searchval);\n      console.log(res);\n\n      if (res.data.message === 'user list fetched') {\n        setUserlist(res.data.userdata);\n        setTasklist(res.data.tasklistdata);\n      } else {\n        alert(res.data.message);\n      }\n    };\n\n    getUserList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  //console.log(searchval)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      style: {\n        marginTop: '90px',\n        width: '95%',\n        overflow: 'overlay',\n        maxWidth: '95%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '45%',\n            float: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '20%',\n              float: 'left',\n              padding: '0.9rem 0.2rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Date Range: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '40%',\n              float: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"myinputclass\",\n              placeholder: \"From Date\",\n              name: \"start_date\",\n              selected: searchval.start_date,\n              onChange: date => {\n                setSearchval({ ...searchval,\n                  start_date: date\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '40%',\n              float: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"myinputclass\",\n              placeholder: \"To Date\",\n              name: \"end_date\",\n              selected: searchval.end_date,\n              onChange: date => {\n                setSearchval({ ...searchval,\n                  end_date: date\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '38%',\n            float: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '18%',\n              float: 'left',\n              padding: '0.9rem 0rem',\n              marginLeft: '25px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Members: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '75%',\n              float: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              style: {\n                width: '95%'\n              },\n              className: \"myinputclass\",\n              name: \"resource\",\n              value: searchval.resource,\n              onChange: e => {\n                setSearchval({ ...searchval,\n                  resource: e.target.value\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Please Select Team Member\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), userlist.map(userdropdata => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: userdropdata.user_id,\n                children: userdropdata.name\n              }, userdropdata.user_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '15%',\n            float: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            style: {\n              marginTop: '10px',\n              background: 'rgba(237, 28, 36, 1)',\n              borderRadius: '3px',\n              border: '0 none',\n              padding: '12px 42px',\n              fontSize: '16px',\n              fontWeight: '500',\n              lineHeight: '16px',\n              cursor: 'pointer',\n              textTransform: 'capitalize',\n              color: 'rgba(255, 255, 255, 1)'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outsider\",\n      style: {\n        marginTop: '-75px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login scroll\",\n        style: {\n          maxWidth: '95%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"Team Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"12PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"3PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"6PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dateseven.map((dataval, indexdate) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center',\n                    backgroundColor: 'lightskyblue'\n                  },\n                  colSpan: \"4\",\n                  children: dataval\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this), userlist.map((userdata, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [userdata.name, \"\\xA0(\", userdata.employee_code, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 57\n                  }, this), tasklist.map((taskdata, indextask) => /*#__PURE__*/_jsxDEV(Tasklist, {\n                    dateblock: dataval,\n                    userid: userdata.user_id,\n                    tasklist: taskdata\n                  }, indextask, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 65\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 53\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 49\n              }, this))]\n            }, indexdate, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboardgh, \"fOXiio9sTz6hCLHu1jQDI9mTy7Y=\");\n\n_c = Dashboardgh;\nexport default Dashboardgh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboardgh\");","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Dashboardgh.js"],"names":["React","useState","useEffect","Table","DatePicker","ghUserData","Tasklist","Button","Dashboardgh","props","userlist","setUserlist","dateseven","setDateseven","tasklist","setTasklist","searchval","setSearchval","start_date","Date","end_date","resource","gh_id","formatDate","date","dd","getDate","mm","getMonth","yyyy","getFullYear","result","i","d","setDate","push","getUserList","storedData","JSON","parse","localStorage","getItem","user_id","console","log","res","data","message","userdata","tasklistdata","alert","marginTop","width","overflow","maxWidth","float","padding","marginLeft","e","target","value","map","userdropdata","name","background","borderRadius","border","fontSize","fontWeight","lineHeight","cursor","textTransform","color","textAlign","dataval","indexdate","backgroundColor","index","employee_code","taskdata","indextask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { ghUserData } from '../Services/userapi'\r\nimport Tasklist from '../components/Tasklist';\r\nimport {Button} from 'react-bootstrap'\r\nconst Dashboardgh = (props) => {\r\n    const [userlist, setUserlist] = useState([]);\r\n    const [dateseven, setDateseven] = useState([]);\r\n    const [tasklist, setTasklist] = useState([]);\r\n    const [searchval, setSearchval] = useState({\r\n        start_date: new Date(),\r\n        end_date: new Date(),\r\n        resource: \"\",\r\n        gh_id:\"\"\r\n    })\r\n    useEffect(() => {\r\n        const formatDate = (date) => {\r\n            var dd = date.getDate();\r\n            var mm = date.getMonth() + 1;\r\n            var yyyy = date.getFullYear();\r\n            if (dd < 10) { dd = '0' + dd }\r\n            if (mm < 10) { mm = '0' + mm }\r\n            date = yyyy + '-' + mm + '-' + dd;\r\n            return date\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < 7; i++) {\r\n            var d = new Date();\r\n            d.setDate(d.getDate() - i);\r\n            result.push(formatDate(d))\r\n        }\r\n        setDateseven(result);\r\n    }, [])\r\n    useEffect(() => {\r\n        const getUserList = async () => {\r\n            const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n            setSearchval({ ...searchval, gh_id: storedData.user_id })\r\n            console.log(\"Daaaa\", searchval)\r\n            let res = await ghUserData(searchval);\r\n            console.log(res)\r\n            if (res.data.message === 'user list fetched') {\r\n                setUserlist(res.data.userdata)\r\n                setTasklist(res.data.tasklistdata)\r\n            } else {\r\n                alert(res.data.message)\r\n            }\r\n        }\r\n        getUserList();\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n    //console.log(searchval)\r\n    return (\r\n        <>\r\n            <div className=\"login\" style={{ marginTop: '90px', width: '95%', overflow: 'overlay', maxWidth: '95%' }}>\r\n\r\n                <div style={{ width: '100%' }}>\r\n                    <div style={{ width: '45%', float: 'left' }}>\r\n                        <div style={{ width: '20%', float: 'left', padding: '0.9rem 0.2rem' }}>\r\n                            <b>Date Range: </b>\r\n                        </div>\r\n                        <div style={{ width: '40%', float: 'left' }}>\r\n                            <DatePicker className=\"myinputclass\" placeholder=\"From Date\" name=\"start_date\" selected={searchval.start_date} onChange={(date) => { setSearchval({ ...searchval, start_date: date }) }} />\r\n                        </div>\r\n                        <div style={{ width: '40%', float: 'left' }}>\r\n                            <DatePicker className=\"myinputclass\" placeholder=\"To Date\" name=\"end_date\" selected={searchval.end_date} onChange={(date) => { setSearchval({ ...searchval, end_date: date }) }} />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '38%', float: 'left' }}>\r\n                        <div style={{ width: '18%', float: 'left', padding: '0.9rem 0rem', marginLeft: '25px' }}>\r\n                            <b>Members: </b>\r\n                        </div>\r\n                        <div style={{ width: '75%', float: 'left' }}>\r\n                            <select style={{ width: '95%' }} className=\"myinputclass\" name=\"resource\" value={searchval.resource} onChange={(e) => { setSearchval({ ...searchval, resource: e.target.value }) }}>\r\n                                <option value=\"\">Please Select Team Member</option>\r\n                                {\r\n                                    userlist.map((userdropdata) =>\r\n                                        <option key={userdropdata.user_id} value={userdropdata.user_id}>{userdropdata.name}</option>)\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '15%', float: 'right' }}>\r\n                        <Button type=\"submit\" style={{ marginTop: '10px', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '12px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Search</Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"outsider\" style={{ marginTop: '-75px' }}>\r\n                <div className=\"login scroll\" style={{ maxWidth: '95%' }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>Team Members</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>12PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>3PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>6PM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                dateseven.map((dataval, indexdate) =>\r\n                                    <React.Fragment key={indexdate}>\r\n                                        <tr>\r\n                                            <th style={{ textAlign: 'center', backgroundColor: 'lightskyblue' }} colSpan=\"4\">{dataval}</th>\r\n                                        </tr>\r\n                                        {\r\n                                            userlist.map((userdata, index) =>\r\n                                                <React.Fragment key={index}>\r\n                                                    <tr>\r\n                                                        <td>{userdata.name}&nbsp;({userdata.employee_code})</td>\r\n                                                        {\r\n                                                            tasklist.map((taskdata, indextask) =>\r\n                                                                <Tasklist key={indextask} dateblock={dataval} userid={userdata.user_id} tasklist={taskdata} />\r\n                                                            )\r\n                                                        }\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td colSpan=\"4\"></td>\r\n                                                    </tr>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboardgh;"]},"metadata":{},"sourceType":"module"}