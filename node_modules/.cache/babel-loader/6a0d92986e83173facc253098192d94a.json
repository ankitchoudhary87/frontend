{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\whosin\\\\Frontend\\\\src\\\\components\\\\Dashboardgh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { ghUserData } from '../Services/userapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst nl2br = require('react-nl2br');\n\nconst Dashboardgh = props => {\n  _s();\n\n  const [userlist, setUserlist] = useState([]);\n  const [dateseven, setDateseven] = useState([]);\n  const [tasklist, setTasklist] = useState([]);\n  useEffect(() => {\n    const formatDate = date => {\n      var dd = date.getDate();\n      var mm = date.getMonth() + 1;\n      var yyyy = date.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      date = yyyy + '-' + mm + '-' + dd;\n      return date;\n    };\n\n    var result = [];\n\n    for (var i = 0; i < 7; i++) {\n      var d = new Date();\n      d.setDate(d.getDate() - i);\n      result.push(formatDate(d));\n    }\n\n    setDateseven(result);\n  }, []);\n  useEffect(() => {\n    const getUserList = async () => {\n      const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n      let res = await ghUserData(storedData.user_id);\n      console.log(res);\n\n      if (res.data.message === 'user list fetched') {\n        setUserlist(res.data.userdata);\n        setTasklist(res.data.tasklistdata);\n      } else {\n        alert(res.data.message);\n      }\n    };\n\n    getUserList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outsider\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login scroll\",\n        style: {\n          maxWidth: '95%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"Team Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"12PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"3PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"6PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dateseven.map((dataval, indexdate) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center',\n                    backgroundColor: 'lightskyblue'\n                  },\n                  colSpan: \"4\",\n                  children: dataval\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), userlist.map((userdata, index) => {\n                let myuservariable = '';\n                let pmdata12 = '';\n                let pmdata3 = '';\n                let pmdata6 = '';\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [userdata.name, \" (\", userdata.employee_code, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 57\n                    }, this), tasklist.map((taskdata, indextask) => {\n                      return /*#__PURE__*/_jsxDEV(Tasklist, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 69\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 53\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, indexdate, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboardgh, \"VFXRwMVYPI1j8bp3k8lNe0GmMUM=\");\n\n_c = Dashboardgh;\nexport default Dashboardgh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboardgh\");","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Dashboardgh.js"],"names":["React","useState","useEffect","Table","ghUserData","nl2br","require","Dashboardgh","props","userlist","setUserlist","dateseven","setDateseven","tasklist","setTasklist","formatDate","date","dd","getDate","mm","getMonth","yyyy","getFullYear","result","i","d","Date","setDate","push","getUserList","storedData","JSON","parse","localStorage","getItem","res","user_id","console","log","data","message","userdata","tasklistdata","alert","maxWidth","width","textAlign","map","dataval","indexdate","backgroundColor","index","myuservariable","pmdata12","pmdata3","pmdata6","name","employee_code","taskdata","indextask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { ghUserData } from '../Services/userapi'\r\nconst nl2br = require('react-nl2br');\r\nconst Dashboardgh = (props) => {\r\n    const [userlist, setUserlist] = useState([]);\r\n    const [dateseven, setDateseven] = useState([]);\r\n    const [tasklist, setTasklist] = useState([]);\r\n    useEffect(() => {\r\n        const formatDate = (date) => {\r\n            var dd = date.getDate();\r\n            var mm = date.getMonth() + 1;\r\n            var yyyy = date.getFullYear();\r\n            if (dd < 10) { dd = '0' + dd }\r\n            if (mm < 10) { mm = '0' + mm }\r\n            date = yyyy + '-' + mm + '-' + dd;\r\n            return date\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < 7; i++) {\r\n            var d = new Date();\r\n            d.setDate(d.getDate() - i);\r\n            result.push(formatDate(d))\r\n        }\r\n        setDateseven(result);\r\n    }, [])\r\n    useEffect(() => {\r\n        const getUserList = async () => {\r\n            const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n            let res = await ghUserData(storedData.user_id);\r\n            console.log(res)\r\n            if (res.data.message === 'user list fetched') {\r\n                setUserlist(res.data.userdata)\r\n                setTasklist(res.data.tasklistdata)\r\n            } else {\r\n                alert(res.data.message)\r\n            }\r\n        }\r\n        getUserList();\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        <>\r\n            <div className=\"outsider\">\r\n                <div className=\"login scroll\" style={{ maxWidth: '95%' }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>Team Members</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>12PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>3PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>6PM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                dateseven.map((dataval, indexdate) =>\r\n                                    <React.Fragment key={indexdate}>\r\n                                        <tr>\r\n                                            <th style={{ textAlign: 'center', backgroundColor: 'lightskyblue' }} colSpan=\"4\">{dataval}</th>\r\n                                        </tr>\r\n                                        {\r\n                                            userlist.map((userdata, index) => {\r\n                                                let myuservariable =  '';\r\n                                                let pmdata12 = '';\r\n                                                let pmdata3 = '';\r\n                                                let pmdata6 = '';\r\n                                                return (\r\n                                                <React.Fragment key={index}>\r\n                                                    <tr>\r\n                                                        <td>{userdata.name} ({userdata.employee_code})</td>\r\n                                                        {\r\n                                                            tasklist.map((taskdata, indextask) => {\r\n                                                                return (\r\n                                                                    <Tasklist />\r\n                                                                );\r\n                                                            })\r\n                                                        }\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td colSpan=\"4\"></td>\r\n                                                    </tr>\r\n                                                </React.Fragment>\r\n                                                );\r\n                                            })\r\n                                        }\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboardgh;"]},"metadata":{},"sourceType":"module"}