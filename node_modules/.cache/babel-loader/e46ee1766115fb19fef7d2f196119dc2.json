{"ast":null,"code":"var convertedVapidKey=urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY);var usersUrl='http://localhost:9001/user';function urlBase64ToUint8Array(base64String){var padding=\"=\".repeat((4-base64String.length%4)%4);// eslint-disable-next-line\nvar base64=(base64String+padding).replace(/\\-/g,\"+\").replace(/_/g,\"/\");var rawData=window.atob(base64);var outputArray=new Uint8Array(rawData.length);for(var i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;}function sendSubscription(subscription){return fetch(\"\".concat(usersUrl,\"/notifications\"),{method:'POST',body:JSON.stringify({subdata:subscription,cokkID:2012}),headers:{'Content-Type':'application/json'}});}export function subscribeUser(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){if(!registration.pushManager){console.log('Push manager unavailable.');return;}registration.pushManager.getSubscription().then(function(existedSubscription){if(existedSubscription===null){console.log('No subscription detected, make a request.');registration.pushManager.subscribe({applicationServerKey:convertedVapidKey,userVisibleOnly:true}).then(function(newSubscription){console.log('New subscription added.');sendSubscription(newSubscription);}).catch(function(e){if(Notification.permission!=='granted'){console.log('Permission was not granted.');}else{console.error('An error ocurred during the subscription process.',e);}});}else{console.log('Existed subscription detected.');sendSubscription(existedSubscription);}});}).catch(function(e){console.error('An error ocurred during Service Worker registration.',e);});}}","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/subscription.js"],"names":["convertedVapidKey","urlBase64ToUint8Array","process","env","REACT_APP_PUBLIC_VAPID_KEY","usersUrl","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","sendSubscription","subscription","fetch","method","body","JSON","stringify","subdata","cokkID","headers","subscribeUser","navigator","serviceWorker","ready","then","registration","pushManager","console","log","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","e","Notification","permission","error"],"mappings":"AAAA,GAAMA,CAAAA,iBAAiB,CAAGC,qBAAqB,CAACC,OAAO,CAACC,GAAR,CAAYC,0BAAb,CAA/C,CACA,GAAMC,CAAAA,QAAQ,CAAG,4BAAjB,CACA,QAASJ,CAAAA,qBAAT,CAA+BK,YAA/B,CAA6C,CAC3C,GAAMC,CAAAA,OAAO,CAAG,IAAIC,MAAJ,CAAW,CAAC,EAAIF,YAAY,CAACG,MAAb,CAAsB,CAA3B,EAAgC,CAA3C,CAAhB,CACA;AACA,GAAMC,CAAAA,MAAM,CAAG,CAACJ,YAAY,CAAGC,OAAhB,EAAyBI,OAAzB,CAAiC,KAAjC,CAAwC,GAAxC,EAA6CA,OAA7C,CAAqD,IAArD,CAA2D,GAA3D,CAAf,CAEA,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB,CACA,GAAMK,CAAAA,WAAW,CAAG,GAAIC,CAAAA,UAAJ,CAAeJ,OAAO,CAACH,MAAvB,CAApB,CAEA,IAAK,GAAIQ,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,OAAO,CAACH,MAA5B,CAAoC,EAAEQ,CAAtC,CAAyC,CACvCF,WAAW,CAACE,CAAD,CAAX,CAAiBL,OAAO,CAACM,UAAR,CAAmBD,CAAnB,CAAjB,CACD,CACD,MAAOF,CAAAA,WAAP,CACD,CAED,QAASI,CAAAA,gBAAT,CAA0BC,YAA1B,CAAwC,CACtC,MAAOC,CAAAA,KAAK,WAAIhB,QAAJ,mBAA8B,CACxCiB,MAAM,CAAE,MADgC,CAExCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACC,OAAO,CAAEN,YAAV,CAAwBO,MAAM,CAAE,IAAhC,CAAf,CAFkC,CAGxCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAH+B,CAA9B,CAAZ,CAOD,CAED,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC9B,GAAI,iBAAmBC,CAAAA,SAAvB,CAAkC,CAChCA,SAAS,CAACC,aAAV,CAAwBC,KAAxB,CAA8BC,IAA9B,CAAmC,SAASC,YAAT,CAAuB,CACxD,GAAI,CAACA,YAAY,CAACC,WAAlB,CAA+B,CAC7BC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACA,OACD,CAEDH,YAAY,CAACC,WAAb,CAAyBG,eAAzB,GAA2CL,IAA3C,CAAgD,SAASM,mBAAT,CAA8B,CAC5E,GAAIA,mBAAmB,GAAK,IAA5B,CAAkC,CAChCH,OAAO,CAACC,GAAR,CAAY,2CAAZ,EACAH,YAAY,CAACC,WAAb,CAAyBK,SAAzB,CAAmC,CACjCC,oBAAoB,CAAEzC,iBADW,CAEjC0C,eAAe,CAAE,IAFgB,CAAnC,EAGGT,IAHH,CAGQ,SAASU,eAAT,CAA0B,CAChCP,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAlB,gBAAgB,CAACwB,eAAD,CAAhB,CACD,CAND,EAMGC,KANH,CAMS,SAASC,CAAT,CAAY,CACnB,GAAIC,YAAY,CAACC,UAAb,GAA4B,SAAhC,CAA2C,CACzCX,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CAFD,IAEO,CACLD,OAAO,CAACY,KAAR,CAAc,mDAAd,CAAmEH,CAAnE,EACD,CACF,CAZD,EAaD,CAfD,IAeO,CACLT,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAlB,gBAAgB,CAACoB,mBAAD,CAAhB,CACD,CACF,CApBD,EAqBD,CA3BD,EA4BGK,KA5BH,CA4BS,SAASC,CAAT,CAAY,CACjBT,OAAO,CAACY,KAAR,CAAc,sDAAd,CAAsEH,CAAtE,EACD,CA9BH,EA+BD,CACF","sourcesContent":["const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\nconst usersUrl = 'http://localhost:9001/user';\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction sendSubscription(subscription) {\n  return fetch(`${usersUrl}/notifications`, {\n    method: 'POST',\n    body: JSON.stringify({subdata: subscription, cokkID: 2012}),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\nexport function subscribeUser() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function(registration) {\n      if (!registration.pushManager) {\n        console.log('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\n        if (existedSubscription === null) {\n          console.log('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function(newSubscription) {\n            console.log('New subscription added.')\n            sendSubscription(newSubscription)\n          }).catch(function(e) {\n            if (Notification.permission !== 'granted') {\n              console.log('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          console.log('Existed subscription detected.')\n          sendSubscription(existedSubscription)\n        }\n      })\n    })\n      .catch(function(e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}