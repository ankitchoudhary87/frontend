{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Container, DropdownButton, Dropdown, Button, Pagination, Spinner } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom'; //import axios from 'axios';\n\nimport { deleteCategory, changecategoryStatus, getCategories, getSubcategoryName } from '../Services/categoryapi';\nimport \"./paginationstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Categories = () => {\n  _s();\n\n  const history = useHistory(); // Main User list data return State\n\n  const [categorydata, setCategorydata] = useState([]); // Total Count State\n\n  const [resultcount, setResultcount] = useState(0); // Loading bar State\n\n  const [loading, setLoading] = useState(false); // Sorting State\n\n  const [sortingcolumn, setSortingcolumn] = useState(\"name\");\n  const [sortingval, setSortingval] = useState(1); // This stated is used for search query parameter\n\n  const [q, setQ] = useState(\"\"); // Pagination Code Starts Here\n\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(5);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(categorydata.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = categorydata.slice(indexOfFirstItem, indexOfLastItem);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage === number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 28\n    }, this);\n  }\n  /*\r\n  const handleLoadMore = () => {\r\n      setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n  */\n  // Pagination Code Ends Here\n  // This useEffect called first time when page load and when sortingval state and sortingcolumn state changed\n\n\n  useEffect(() => {\n    CategoryList();\n  }, [sortingval, sortingcolumn]); // eslint-disable-line react-hooks/exhaustive-deps\n  // Check if localstorage is set or not. If not set than redirect to the home page\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // This funciton is called when remove the user from the list\n\n  const removeCategory = async (id, name) => {\n    var result = window.confirm(\"Want to delete the Category \" + name + \"?\");\n\n    if (result) {\n      let response = await deleteCategory(id);\n\n      if (response.data.message && response.data.message === 'Category deleted successfully!') {\n        alert(response.data.message);\n        CategoryList();\n      }\n    }\n  }; // This function is called when change the user status\n\n\n  const statusCategory = async id => {\n    let response = await changecategoryStatus(id);\n\n    if (response.data.message && response.data.message === 'Category status updated successfully') {\n      alert(response.data.message);\n      CategoryList();\n    }\n  }; // This function is used for change the status of sorting\n\n\n  const sortingdata = (colname, val) => {\n    setSortingcolumn(colname);\n    setSortingval(val);\n  }; // This function is used for fetch the all user data and in this function we have passed the sorting column and search parameter\n\n\n  let sortingparams = '';\n  let searchparams = '';\n\n  const CategoryList = async () => {\n    setLoading(true);\n    sortingparams = '/' + sortingcolumn + '/' + sortingval;\n\n    if (q) {\n      setcurrentPage(1);\n      setitemsPerPage(5);\n      searchparams = '/' + q;\n    } else {\n      searchparams = '/';\n    }\n\n    let response = await getCategories(sortingparams, searchparams);\n\n    if (response.data.message && response.data.message === 'category list fetched') {\n      setResultcount(response.data.catdata.length);\n      setCategorydata(response.data.catdata);\n    }\n\n    setLoading(false);\n  };\n  /*const clearSearch=()=>{\r\n      setQ(\"\")\r\n      alert(q)\r\n      alert(\"AAAAAA\");\r\n      CategoryList()\r\n  }\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"maindivmargin\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          float: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: '40%'\n          },\n          type: \"text\",\n          placeholder: \"Search....\",\n          name: \"search\",\n          value: q,\n          onChange: e => {\n            setQ(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            CategoryList();\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 160\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right',\n          marginBottom: '14px',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.push(\"/addCategory\");\n          },\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 95\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '25%',\n          float: 'left',\n          marginLeft: '2%',\n          marginTop: '1%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Category List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          float: 'right',\n          marginTop: '2%',\n          marginLeft: '2%',\n          marginRight: '2%',\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [resultcount, \" Results Found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 137\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"Category Name \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  sortingdata(\"name\", \"1\");\n                },\n                style: {\n                  border: '0',\n                  backgroundColor: 'white',\n                  margin: '0',\n                  padding: '0'\n                },\n                children: \"\\u2B06\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 47\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  sortingdata(\"name\", \"-1\");\n                },\n                style: {\n                  border: '0',\n                  backgroundColor: 'white',\n                  margin: '0',\n                  padding: '0'\n                },\n                children: \"\\u2B07\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 189\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Parent ID \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: !loading ? currentItems.map((userdata, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: userdata.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: userdata.parentID !== \"\" ? userdata.subcatname.name : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: userdata.status ? \"Active\" : \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                title: \"Actions\",\n                id: \"dropdown-variants-Primary\",\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => {\n                    history.push(\"/updateCategory/\" + userdata._id);\n                  },\n                  children: \"Edit Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => {\n                    removeCategory(userdata._id, userdata.name);\n                  },\n                  children: \"Delete Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => {\n                    statusCategory(userdata._id);\n                  },\n                  children: \"Change Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 45\n                }, this)]\n              }, \"Primary\", true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              style: {\n                paddingTop: '20px',\n                paddingBottom: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                role: \"status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visually-hidden\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 107\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pageNumbers\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrevbtn,\n              disabled: currentPage === pages[0] ? true : false,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), pageDecrementBtn, /*#__PURE__*/_jsxDEV(Pagination, {\n            size: \"sm\",\n            children: renderPageNumbers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextbtn,\n              disabled: currentPage === pages[pages.length - 1] ? true : false,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Categories, \"1ip24Tt/TQCUgVdBov79OdGrV3I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Categories.js"],"names":["React","useEffect","useState","Table","Container","DropdownButton","Dropdown","Button","Pagination","Spinner","useHistory","deleteCategory","changecategoryStatus","getCategories","getSubcategoryName","Categories","history","categorydata","setCategorydata","resultcount","setResultcount","loading","setLoading","sortingcolumn","setSortingcolumn","sortingval","setSortingval","q","setQ","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","CategoryList","storedData","JSON","parse","localStorage","getItem","_id","removeCategory","name","result","window","confirm","response","data","message","alert","statusCategory","sortingdata","colname","val","sortingparams","searchparams","catdata","width","float","e","value","textAlign","marginBottom","marginRight","marginLeft","marginTop","border","backgroundColor","margin","padding","userdata","parentID","subcatname","status","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Container, DropdownButton, Dropdown, Button, Pagination, Spinner } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n//import axios from 'axios';\r\nimport {deleteCategory, changecategoryStatus, getCategories, getSubcategoryName} from '../Services/categoryapi'\r\nimport \"./paginationstyle.css\";\r\nconst Categories = () => {\r\n    const history = useHistory();\r\n    // Main User list data return State\r\n    const [categorydata, setCategorydata] = useState([]);\r\n    // Total Count State\r\n    const [resultcount, setResultcount] = useState(0);\r\n    // Loading bar State\r\n    const [loading, setLoading] = useState(false);\r\n    // Sorting State\r\n    const [sortingcolumn, setSortingcolumn] = useState(\"name\");\r\n    const [sortingval, setSortingval] = useState(1);\r\n    // This stated is used for search query parameter\r\n    const [q, setQ] = useState(\"\");\r\n\r\n    // Pagination Code Starts Here\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n    const handleClick = (event) => {\r\n        setcurrentPage(Number(event.target.id));\r\n    };\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(categorydata.length / itemsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = categorydata.slice(indexOfFirstItem, indexOfLastItem);\r\n    const renderPageNumbers = pages.map((number) => {\r\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n            return (\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={handleClick}\r\n                    className={currentPage === number ? \"active\" : null}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n    const handleNextbtn = () => {\r\n        setcurrentPage(currentPage + 1);\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n        if ((currentPage - 1) % pageNumberLimit === 0) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n    let pageIncrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit) {\r\n        pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n    }\r\n    let pageDecrementBtn = null;\r\n    if (minPageNumberLimit >= 1) {\r\n        pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n    }\r\n    /*\r\n    const handleLoadMore = () => {\r\n        setitemsPerPage(itemsPerPage + 5);\r\n    };\r\n    */\r\n    // Pagination Code Ends Here\r\n    // This useEffect called first time when page load and when sortingval state and sortingcolumn state changed\r\n    useEffect(() => {\r\n        CategoryList()\r\n    }, [sortingval, sortingcolumn]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // Check if localstorage is set or not. If not set than redirect to the home page\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    \r\n    // This funciton is called when remove the user from the list\r\n    const removeCategory = async (id, name) => {\r\n        var result = window.confirm(\"Want to delete the Category \" + name + \"?\");\r\n        if (result) {\r\n            let response = await deleteCategory(id);\r\n            if (response.data.message && response.data.message === 'Category deleted successfully!') {\r\n                alert(response.data.message);\r\n                CategoryList()\r\n            }\r\n        }\r\n    }\r\n    // This function is called when change the user status\r\n    const statusCategory = async (id) => {\r\n        let response = await changecategoryStatus(id);\r\n        if (response.data.message && response.data.message === 'Category status updated successfully') {\r\n            alert(response.data.message);\r\n            CategoryList()\r\n        }\r\n    }\r\n    // This function is used for change the status of sorting\r\n    const sortingdata = (colname, val) => {\r\n        setSortingcolumn(colname)\r\n        setSortingval(val)\r\n    }\r\n\r\n    // This function is used for fetch the all user data and in this function we have passed the sorting column and search parameter\r\n    let sortingparams = '';\r\n    let searchparams = '';\r\n    const CategoryList = async () => {\r\n        setLoading(true)\r\n        sortingparams = '/' + sortingcolumn + '/' + sortingval;\r\n        if (q) {\r\n            setcurrentPage(1);\r\n            setitemsPerPage(5);\r\n            searchparams = '/' + q\r\n        } else {\r\n            searchparams = '/';\r\n        }\r\n        let response = await getCategories(sortingparams, searchparams);\r\n        if(response.data.message && response.data.message === 'category list fetched') {\r\n            setResultcount(response.data.catdata.length);\r\n            setCategorydata(response.data.catdata);        \r\n        }\r\n        setLoading(false)\r\n    }\r\n    /*const clearSearch=()=>{\r\n        setQ(\"\")\r\n        alert(q)\r\n        alert(\"AAAAAA\");\r\n        CategoryList()\r\n    }\r\n    */\r\n    return (\r\n        <Container className=\"maindivmargin\">\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <div style={{ width: '60%', float: 'left' }}>\r\n                    <input style={{ width: '40%' }} type=\"text\" placeholder=\"Search....\" name=\"search\" value={q} onChange={(e) => { setQ(e.target.value) }} /> <Button onClick={() => { CategoryList() }}>Search</Button> {/*<Button onClick={() => { clearSearch() }}>Clear</Button>*/}\r\n                </div>\r\n                <div style={{ textAlign: 'right', marginBottom: '14px', marginRight: '5px' }}><Button onClick={() => { history.push(\"/addCategory\") }}>Add New Category</Button></div>\r\n            </div>\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <div style={{ width: '25%', float: 'left', marginLeft: '2%', marginTop: '1%' }}><h2>Category List</h2></div>\r\n                <div style={{ width: '60%', float: 'right', marginTop: '2%', marginLeft: '2%', marginRight: '2%', textAlign: 'right' }}><h5>{resultcount} Results Found</h5></div>\r\n            </div>\r\n            <div className=\"userlist\">\r\n                <h2>&nbsp;</h2>\r\n                <Table responsive striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Category Name <button onClick={() => { sortingdata(\"name\", \"1\") }} style={{ border: '0', backgroundColor: 'white', margin: '0', padding: '0' }}>⬆️</button> <button onClick={() => { sortingdata(\"name\", \"-1\") }} style={{ border: '0', backgroundColor: 'white', margin: '0', padding: '0' }}>⬇️</button> </th>\r\n                            <th>Parent ID {/*<button onClick={() => { sortingdata(\"last_name\", \"1\") }} style={{ border: '0', backgroundColor: 'white', margin: '0', padding: '0' }}>⬆️</button> <button onClick={() => { sortingdata(\"last_name\", \"-1\") }} style={{ border: '0', backgroundColor: 'white', margin: '0', padding: '0' }}>⬇️</button>*/}</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            !loading ?\r\n                                currentItems.map((userdata, i) =>\r\n                                    <tr key={i}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{userdata.name}</td>\r\n                                        <td>{userdata.parentID!==\"\" ? userdata.subcatname.name:\"N/A\"}</td>\r\n                                        <td>{userdata.status ? \"Active\" : \"Inactive\"}</td>\r\n                                        <td><DropdownButton key=\"Primary\" title=\"Actions\" id=\"dropdown-variants-Primary\">\r\n                                            {/*<Dropdown.Item onClick={() => { props.updateUser(userdata._id) }}>Edit User</Dropdown.Item>*/}\r\n                                            <Dropdown.Item onClick={() => { history.push(\"/updateCategory/\" + userdata._id) }}>Edit Category</Dropdown.Item>\r\n                                             <Dropdown.Item onClick={() => { removeCategory(userdata._id, userdata.name) }}>Delete Category</Dropdown.Item>\r\n                                            <Dropdown.Item onClick={() => { statusCategory(userdata._id) }}>Change Status</Dropdown.Item>\r\n                                        </DropdownButton></td>\r\n                                    </tr>\r\n                                ) : <tr><td colSpan=\"5\" style={{paddingTop:'20px', paddingBottom:'20px'}}><Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Loading...</span>\r\n                                </Spinner></td></tr>\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <div>\r\n                <div style={{ marginTop: '30px' }}>\r\n                    <ul className=\"pageNumbers\">\r\n                        <li>\r\n                            <button\r\n                                onClick={handlePrevbtn}\r\n                                disabled={currentPage === pages[0] ? true : false}\r\n                            >\r\n                                Prev\r\n                            </button>\r\n                        </li>\r\n                        {pageDecrementBtn}\r\n                        <Pagination size=\"sm\">{renderPageNumbers}</Pagination>\r\n                        {pageIncrementBtn}\r\n\r\n                        <li>\r\n                            <button\r\n                                onClick={handleNextbtn}\r\n                                disabled={currentPage === pages[pages.length - 1] ? true : false}\r\n                            >\r\n                                Next\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                    {/*<button onClick={handleLoadMore} className=\"loadmore\">\r\n                    Load More\r\n                </button>*/}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Categories"]},"metadata":{},"sourceType":"module"}