{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'; //import axios from 'axios';\n\nimport useValidator from './useValidator';\nimport { Form } from 'react-bootstrap';\nimport { addCategory, editsingleCategory, getsingleCategory, getCategoryList } from '../Services/categoryapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCategory = () => {\n  _s();\n\n  let myButton = '';\n  let {\n    catID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [subcatdata, setSubcatdata] = useState([]);\n  const [category, setCategory] = useState({\n    name: \"\",\n    parentID: \"\",\n    photo: \"\"\n  });\n\n  const handlePhoto = e => {\n    alert(\"AAnkit\");\n    setCategory({ ...category,\n      photo: e.target.files[0]\n    });\n  }; // Getting the Subcategory dropdown data\n\n\n  useEffect(() => {\n    const getSubcatdataList = async () => {\n      let res = await getCategoryList();\n      console.log(res.data.catdata);\n      setSubcatdata(res.data.catdata);\n    };\n\n    getSubcatdataList();\n  }, []);\n  useEffect(() => {\n    async function getcatdata() {\n      if (catID && catID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleCategory(catID);\n        setCategory({\n          name: res.data.catdata.name,\n          parentID: res.data.catdata.parentID,\n          photo: res.data.catdata.image\n        });\n      }\n    }\n\n    getcatdata();\n  }, [catID]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCategory({ ...category,\n      [name]: value\n    });\n  };\n\n  const adddCategory = async () => {\n    if (validator.allValid()) {\n      let response = await addCategory(category);\n\n      if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\n        alert(response.data.message);\n      } else {\n        alert(response.data.message);\n        history.push(\"/category\");\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateCategory = async () => {\n    if (validator.allValid()) {\n      let response = await editsingleCategory(catID, category);\n\n      if (response.data.message === 'Category updated successfully') {\n        alert(response.data.message);\n        history.push(\"/category\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (catID && catID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateCategory();\n      },\n      children: \"Update Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddCategory();\n      },\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: catID && catID !== undefined ? \"Update Category\" : \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: category.name,\n              placeholder: \"Category Name\",\n              name: \"name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), validator.message('name', category.name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Category Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '91%'\n            },\n            className: \"myinputclass\",\n            name: \"parentID\",\n            value: category.parentID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), subcatdata.map((subcatnamedata, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subcatnamedata._id,\n              children: subcatnamedata.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Category Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 39\n              }, this), \"(Accept only .png, .jpg, .jpeg)\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              name: \"photo\",\n              onChange: handlePhoto,\n              accept: \".png, .jpg, .jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), category.photo, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/category\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddCategory, \"M88QVGJEfa7tmmQL9DsrEoGgCzo=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddCategory;\nexport default AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddCategory.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","Form","addCategory","editsingleCategory","getsingleCategory","getCategoryList","AddCategory","myButton","catID","history","validator","showValidationMessage","subcatdata","setSubcatdata","category","setCategory","name","parentID","photo","handlePhoto","e","alert","target","files","getSubcatdataList","res","console","log","data","catdata","getcatdata","undefined","image","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","value","adddCategory","allValid","response","message","updateCategory","width","minHeight","float","className","messages","required","map","subcatnamedata","index","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport useValidator from './useValidator'\r\nimport {Form} from 'react-bootstrap'\r\nimport { addCategory, editsingleCategory, getsingleCategory, getCategoryList } from '../Services/categoryapi'\r\nconst AddCategory = () => {\r\n    let myButton = '';\r\n    let { catID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [subcatdata, setSubcatdata] = useState([]);\r\n    const [category, setCategory] = useState({\r\n        name: \"\",\r\n        parentID: \"\",\r\n        photo: \"\"\r\n    })\r\n\r\n    const handlePhoto = (e) => {\r\n        alert(\"AAnkit\")\r\n        setCategory({...category, photo: e.target.files[0]});\r\n    }\r\n    // Getting the Subcategory dropdown data\r\n    useEffect(() => {\r\n        const getSubcatdataList = async () => {\r\n            let res = await getCategoryList();\r\n            console.log(res.data.catdata)\r\n            setSubcatdata(res.data.catdata)\r\n        }\r\n        getSubcatdataList()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function getcatdata() {\r\n            if (catID && catID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleCategory(catID);\r\n                setCategory({\r\n                    name: res.data.catdata.name,\r\n                    parentID: res.data.catdata.parentID,\r\n                    photo: res.data.catdata.image\r\n                })\r\n            }\r\n        }\r\n        getcatdata()\r\n    }, [catID])\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setCategory({\r\n            ...category,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddCategory = async () => {\r\n        if (validator.allValid()) {\r\n            let response = await addCategory(category);\r\n            if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\r\n                alert(response.data.message);\r\n            } else {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateCategory = async () => {\r\n        if (validator.allValid()) {\r\n            let response = await editsingleCategory(catID, category);\r\n            if (response.data.message === 'Category updated successfully') {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (catID && catID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateCategory() }}>Update Category</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddCategory() }}>Add Category</div>\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setCategory({...category, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{catID && catID !== undefined ? \"Update Category\" : \"Add Category\"}</h1>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '100%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={category.name} placeholder=\"Category Name\" name=\"name\" onChange={inputVal} />\r\n                            {validator.message('name', category.name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Category Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <select style={{ width: '91%' }} className=\"myinputclass\" name=\"parentID\" value={category.parentID} onChange={inputVal}>\r\n                            <option value=\"\">\r\n                                Please Select Subcategory\r\n                            </option>\r\n                            {\r\n                                subcatdata.map((subcatnamedata, index) => \r\n                                    \r\n                                    <option value={subcatnamedata._id}>\r\n                                        {/*subcatnamedata.subcatname.parentname==='' ? subcatnamedata.name :subcatnamedata.subcatname.parentname*/}\r\n                                        {subcatnamedata.name}\r\n                                    </option>\r\n                                    \r\n                                )\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                    \r\n\r\n<Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n    <Form.Label>Category Image: &nbsp;<br/>(Accept only .png, .jpg, .jpeg)&nbsp;&nbsp;</Form.Label>\r\n    <Form.Control type=\"file\" name=\"photo\" onChange={handlePhoto} accept=\".png, .jpg, .jpeg\" />\r\n  </Form.Group>\r\n\r\n            </div>\r\n            {category.photo}\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/category\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}