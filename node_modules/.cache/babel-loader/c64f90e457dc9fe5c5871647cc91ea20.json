{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./paginationstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Pagination({\n  data,\n  callbackfunc\n}) {\n  _s();\n\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(5);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  useEffect(() => {\n    console.log(\"AQQQQ\", currentItems);\n    callbackfunc(currentItems);\n  }, []);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage === number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this);\n  }\n\n  const handleLoadMore = () => {\n    setitemsPerPage(itemsPerPage + 5);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pageNumbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevbtn,\n            disabled: currentPage === pages[0] ? true : false,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), pageDecrementBtn, renderPageNumbers, pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextbtn,\n            disabled: currentPage === pages[pages.length - 1] ? true : false,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        className: \"loadmore\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Pagination, \"JGCRW22p77aIj61Xo/U+v0CD/6Y=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Pagination.js"],"names":["React","useEffect","useState","Pagination","data","callbackfunc","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","console","log","renderPageNumbers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","handleLoadMore"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./paginationstyle.css\";\r\nfunction Pagination ({data, callbackfunc}){\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  const handleClick = (event) => {\r\n    setcurrentPage(Number(event.target.id));\r\n  };\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  useEffect(() => {\r\n\r\n      console.log(\"AQQQQ\", currentItems)\r\n    callbackfunc(currentItems);\r\n  }, []);\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={handleClick}\r\n          className={currentPage === number ? \"active\" : null}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const handleNextbtn = () => {\r\n    setcurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setcurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit === 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handleLoadMore = () => {\r\n    setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n    return (\r\n        <>\r\n            <div>\r\n<ul className=\"pageNumbers\">\r\n        <li>\r\n          <button\r\n            onClick={handlePrevbtn}\r\n            disabled={currentPage === pages[0] ? true : false}\r\n          >\r\n            Prev\r\n          </button>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n\r\n        <li>\r\n          <button\r\n            onClick={handleNextbtn}\r\n            disabled={currentPage === pages[pages.length - 1] ? true : false}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <button onClick={handleLoadMore} className=\"loadmore\">\r\n        Load More\r\n      </button>\r\n</div>\r\n        </>\r\n    )\r\n}\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}