{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\whosin\\\\Frontend\\\\src\\\\components\\\\Dashboardgh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { ghUserData } from '../Services/userapi';\nimport Tasklist from '../components/Tasklist';\nimport Searchbar from '../components/Searchbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboardgh = props => {\n  _s();\n\n  let loggedInUserId = \"\";\n  const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n  if (storedData) {\n    loggedInUserId = storedData.user_id;\n  }\n\n  const [userlist, setUserlist] = useState([]);\n  const [dateseven, setDateseven] = useState([]);\n  const [tasklist, setTasklist] = useState([]);\n  const [AllUserlist, setAllUserlist] = useState([]);\n  const [searchval, setSearchval] = useState({\n    start_date: new Date(new Date().getTime() - 6 * 24 * 60 * 60 * 1000),\n    end_date: new Date(),\n    resource: \"\",\n    gh_id: loggedInUserId\n  });\n\n  const statefromchild = (newValue, type) => {\n    /*if (type && type !== '' && type === 'fromdate') {\r\n        setSearchval({ ...searchval, start_date: newValue })\r\n    } else if (type && type !== '' && type === 'todate') {\r\n        setSearchval({ ...searchval, end_date: newValue })\r\n    } else if (type && type !== '' && type === 'usersname') {\r\n        setSearchval({ ...searchval, resource: newValue })\r\n    }*/\n    alert(type);\n    setSearchval({ ...searchval,\n      type: newValue\n    });\n  };\n\n  const datasevendays = () => {\n    var no_of_days;\n    var today;\n    var dd;\n    var mm;\n    var yyyy;\n    var result = [];\n\n    if (searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null && searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null) {\n      no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(searchval.end_date)));\n      today = props.datconverted(new Date(searchval.end_date));\n    } else if (searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null && (searchval.end_date === '' || searchval.end_date === null)) {\n      no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(new Date())));\n      today = props.datconverted(new Date());\n    } else if ((searchval.start_date === '' || searchval.start_date === null) && searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null) {\n      no_of_days = props.getDifferenceInDays(new Date(props.datconverted(new Date(searchval.end_date.getTime() - 30 * 24 * 60 * 60 * 1000))), new Date(props.datconverted(searchval.end_date)));\n      today = props.datconverted(new Date(searchval.end_date));\n    } else {\n      no_of_days = '6';\n      today = props.datconverted(new Date());\n    }\n\n    for (var i = 0; i <= no_of_days; i++) {\n      var d = new Date(today);\n      d.setDate(d.getDate() - i);\n      dd = d.getDate();\n      mm = d.getMonth() + 1;\n      yyyy = d.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      var datefinal = yyyy + '-' + mm + '-' + dd;\n      result.push(datefinal);\n    }\n\n    setDateseven(result);\n  };\n  /*useEffect(() => {\r\n      datasevendays();\r\n  }, [])*/\n\n\n  const getUserList = async () => {\n    let res = await ghUserData(searchval); //console.log(res.data.tasklistdata)\n\n    if (res.data.message === 'user list fetched') {\n      setAllUserlist(res.data.userdatalist);\n      setUserlist(res.data.userdata);\n      setTasklist(res.data.tasklistdata);\n    } else {\n      alert(res.data.message);\n    }\n  };\n\n  useEffect(() => {\n    datasevendays();\n    getUserList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  console.log(searchval);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      style: {\n        marginTop: '90px',\n        width: '95%',\n        overflow: 'overlay',\n        maxWidth: '95%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Searchbar, {\n        start_date: searchval.start_date,\n        end_date: searchval.end_date,\n        resource: searchval.resource,\n        onchange: statefromchild,\n        datasevendays: datasevendays,\n        getUserList: getUserList,\n        AllUserlistdata: AllUserlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outsider\",\n      style: {\n        marginTop: '-75px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login scroll\",\n        style: {\n          maxWidth: '95%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"Team Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"12PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"3PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '25%',\n                  textAlign: 'center'\n                },\n                children: \"6PM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dateseven.map((dataval, indexdate) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center',\n                    backgroundColor: 'lightskyblue'\n                  },\n                  colSpan: \"4\",\n                  children: dataval\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this), userlist.map((userdata, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [userdata.name, \"\\xA0(\", userdata.employee_code, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 57\n                  }, this), tasklist.map((taskdata, indextask) => /*#__PURE__*/_jsxDEV(Tasklist, {\n                    dateblock: dataval,\n                    userid: userdata.user_id,\n                    tasklist: taskdata\n                  }, indextask, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 65\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 53\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 49\n              }, this))]\n            }, indexdate, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboardgh, \"77HhtgbF6hfLIigEILK5a9CDI+Y=\");\n\n_c = Dashboardgh;\nexport default Dashboardgh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboardgh\");","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Dashboardgh.js"],"names":["React","useState","useEffect","Table","ghUserData","Tasklist","Searchbar","Dashboardgh","props","loggedInUserId","storedData","JSON","parse","localStorage","getItem","user_id","userlist","setUserlist","dateseven","setDateseven","tasklist","setTasklist","AllUserlist","setAllUserlist","searchval","setSearchval","start_date","Date","getTime","end_date","resource","gh_id","statefromchild","newValue","type","alert","datasevendays","no_of_days","today","dd","mm","yyyy","result","getDifferenceInDays","datconverted","i","d","setDate","getDate","getMonth","getFullYear","datefinal","push","getUserList","res","data","message","userdatalist","userdata","tasklistdata","console","log","marginTop","width","overflow","maxWidth","textAlign","map","dataval","indexdate","backgroundColor","index","name","employee_code","taskdata","indextask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { ghUserData } from '../Services/userapi'\r\nimport Tasklist from '../components/Tasklist';\r\nimport Searchbar from '../components/Searchbar';\r\nconst Dashboardgh = (props) => {\r\n    let loggedInUserId = \"\";\r\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n    if (storedData) {\r\n        loggedInUserId = storedData.user_id;\r\n    }\r\n    const [userlist, setUserlist] = useState([]);\r\n    const [dateseven, setDateseven] = useState([]);\r\n    const [tasklist, setTasklist] = useState([]);\r\n    const [AllUserlist, setAllUserlist] = useState([]);\r\n    const [searchval, setSearchval] = useState({\r\n        start_date: new Date(new Date().getTime() - (6 * 24 * 60 * 60 * 1000)),\r\n        end_date: new Date(),\r\n        resource: \"\",\r\n        gh_id: loggedInUserId\r\n    })\r\n    const statefromchild = (newValue, type) => {\r\n        /*if (type && type !== '' && type === 'fromdate') {\r\n            setSearchval({ ...searchval, start_date: newValue })\r\n        } else if (type && type !== '' && type === 'todate') {\r\n            setSearchval({ ...searchval, end_date: newValue })\r\n        } else if (type && type !== '' && type === 'usersname') {\r\n            setSearchval({ ...searchval, resource: newValue })\r\n        }*/\r\n        alert(type);\r\n        setSearchval({\r\n            ...searchval,\r\n            type: newValue\r\n        })\r\n    }\r\n    const datasevendays = () => {\r\n        var no_of_days;\r\n        var today; var dd; var mm; var yyyy;\r\n        var result = [];\r\n        if ((searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null) && (searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(searchval.end_date)));\r\n            today = props.datconverted(new Date(searchval.end_date));\r\n        } else if ((searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null) && (searchval.end_date === '' || searchval.end_date === null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(new Date())));\r\n            today = props.datconverted(new Date());\r\n        } else if ((searchval.start_date === '' || searchval.start_date === null) && (searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(new Date(searchval.end_date.getTime() - (30 * 24 * 60 * 60 * 1000)))), new Date(props.datconverted(searchval.end_date)));\r\n            today = props.datconverted(new Date(searchval.end_date));\r\n        } else {\r\n            no_of_days = '6';\r\n            today = props.datconverted(new Date());\r\n        }\r\n        for (var i = 0; i <= no_of_days; i++) {\r\n            var d = new Date(today);\r\n            d.setDate(d.getDate() - i);\r\n            dd = d.getDate();\r\n            mm = d.getMonth() + 1;\r\n            yyyy = d.getFullYear();\r\n            if (dd < 10) { dd = '0' + dd }\r\n            if (mm < 10) { mm = '0' + mm }\r\n            var datefinal = yyyy + '-' + mm + '-' + dd;\r\n            result.push(datefinal)\r\n        }\r\n        setDateseven(result);\r\n    }\r\n    /*useEffect(() => {\r\n        datasevendays();\r\n    }, [])*/\r\n    const getUserList = async () => {\r\n        let res = await ghUserData(searchval);\r\n        //console.log(res.data.tasklistdata)\r\n        if (res.data.message === 'user list fetched') {\r\n            setAllUserlist(res.data.userdatalist)\r\n            setUserlist(res.data.userdata)\r\n            setTasklist(res.data.tasklistdata)\r\n        } else {\r\n            alert(res.data.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        datasevendays();\r\n        getUserList();\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n    console.log(searchval);\r\n    return (\r\n        <>\r\n            <div className=\"login\" style={{ marginTop: '90px', width: '95%', overflow: 'overlay', maxWidth: '95%' }}>\r\n                <Searchbar start_date={searchval.start_date} end_date={searchval.end_date} resource={searchval.resource} onchange={statefromchild} datasevendays={datasevendays} getUserList={getUserList} AllUserlistdata={AllUserlist} />\r\n            </div>\r\n            <div className=\"outsider\" style={{ marginTop: '-75px' }}>\r\n                <div className=\"login scroll\" style={{ maxWidth: '95%' }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>Team Members</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>12PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>3PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>6PM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                dateseven.map((dataval, indexdate) =>\r\n                                    <React.Fragment key={indexdate}>\r\n                                        <tr>\r\n                                            <th style={{ textAlign: 'center', backgroundColor: 'lightskyblue' }} colSpan=\"4\">{dataval}</th>\r\n                                        </tr>\r\n                                        {\r\n                                            userlist.map((userdata, index) =>\r\n                                                <React.Fragment key={index}>\r\n                                                    <tr>\r\n                                                        <td>{userdata.name}&nbsp;({userdata.employee_code})</td>\r\n                                                        {\r\n                                                            tasklist.map((taskdata, indextask) =>\r\n                                                                <Tasklist key={indextask} dateblock={dataval} userid={userdata.user_id} tasklist={taskdata} />\r\n                                                            )\r\n                                                        }\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td colSpan=\"4\"></td>\r\n                                                    </tr>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboardgh;"]},"metadata":{},"sourceType":"module"}