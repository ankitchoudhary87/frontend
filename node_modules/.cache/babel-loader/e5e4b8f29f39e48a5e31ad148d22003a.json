{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Solsearchresult.js\",\n    _s = $RefreshSig$();\n\nimport { Container } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Solicitation from './Solicitation';\nimport { getSoldata } from '../Services/solicitationapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Solsearchresult = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [loader, setLoader] = useState(location.loaderstatus);\n  const [fbofinaldata, setFbifinaldata] = useState([]); // Check if localstorage is set or not. If not set than redirect to the home page\n\n  useEffect(() => {\n    document.title = 'Solicitation Search Result';\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const Solsearchresult = async () => {\n      //console.log(\"Final Data\", location.data)\n      const response = await getSoldata(location.data);\n      setLoader(false);\n      setFbifinaldata(response.data.fbodata);\n    };\n\n    Solsearchresult();\n  }, [location.data]);\n  console.log(loader);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"maindivmargin\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [loader ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/ajax-spinner.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Solicitation, {\n        searchoption: props.searchoption,\n        searchimage: props.searchimage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 71\n      }, this), fbofinaldata.map((datafbo, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datafbo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datafbo.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datafbo.tbl_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datafbo.agency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: datafbo.office\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Solsearchresult, \"B7AQhL99UPaNQi9YDpEewGYfIdI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Solsearchresult;\nexport default Solsearchresult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Solsearchresult\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Solsearchresult.js"],"names":["Container","React","useEffect","useState","useHistory","useLocation","Solicitation","getSoldata","Solsearchresult","props","history","location","loader","setLoader","loaderstatus","fbofinaldata","setFbifinaldata","document","title","storedData","JSON","parse","localStorage","getItem","_id","push","response","data","fbodata","console","log","textAlign","searchoption","searchimage","map","datafbo","index","date","subject","tbl_type","agency","office"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACQ,QAAQ,CAACG,YAAV,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD,CAJ+B,CAK/B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACC,KAAT,GAAiB,4BAAjB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAnB;;AACA,QAAI,CAACJ,UAAU,CAACK,GAAhB,EAAqB;AACjBd,MAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACH;AACJ,GANQ,EAMN,EANM,CAAT,CAN+B,CAYtB;;AACTvB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,eAAe,GAAG,YAAY;AAChC;AACA,YAAMkB,QAAQ,GAAG,MAAMnB,UAAU,CAACI,QAAQ,CAACgB,IAAV,CAAjC;AACAd,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,MAAAA,eAAe,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAf;AACH,KALD;;AAMApB,IAAAA,eAAe;AAClB,GARQ,EAQN,CAACG,QAAQ,CAACgB,IAAV,CARM,CAAT;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AAAqC,MAAA,KAAK,EAAE;AAACmB,QAAAA,SAAS,EAAC;AAAX,OAA5C;AAAA,iBAEQnB,MAAM,gBAAG;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA4C,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEH,KAAK,CAACuB,YAAlC;AAAgD,QAAA,WAAW,EAAEvB,KAAK,CAACwB;AAAnE;AAAA;AAAA;AAAA;AAAA,cAF1D,EAKQlB,YAAY,CAACmB,GAAb,CAAiB,CAACC,OAAD,EAAUC,KAAV,kBACb;AAAA,gCACI;AAAA,oBAAMA,KAAK,GAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMD,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAMF,OAAO,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAMH,OAAO,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAMJ,OAAO,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAML,OAAO,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA,sBADJ,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuBH,CA9CD;;GAAMjC,e;UACcJ,U,EACCC,W;;;KAFfG,e;AA+CN,eAAeA,eAAf","sourcesContent":["import { Container } from 'react-bootstrap'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport Solicitation from './Solicitation';\r\nimport { getSoldata } from '../Services/solicitationapi'\r\nconst Solsearchresult = (props) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [loader, setLoader] = useState(location.loaderstatus);\r\n    const [fbofinaldata, setFbifinaldata] = useState([]);\r\n    // Check if localstorage is set or not. If not set than redirect to the home page\r\n    useEffect(() => {\r\n        document.title = 'Solicitation Search Result';\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n    useEffect(()=>{\r\n        const Solsearchresult = async () => {\r\n            //console.log(\"Final Data\", location.data)\r\n            const response = await getSoldata(location.data)\r\n            setLoader(false)\r\n            setFbifinaldata(response.data.fbodata);\r\n        }\r\n        Solsearchresult();\r\n    }, [location.data])\r\n    console.log(loader)\r\n    return (\r\n        <>\r\n            <Container className=\"maindivmargin\" style={{textAlign:'center'}}>\r\n                {\r\n                    loader ? <img src=\"/images/ajax-spinner.gif\" /> : <Solicitation searchoption={props.searchoption} searchimage={props.searchimage} />\r\n                }\r\n                {\r\n                    fbofinaldata.map((datafbo, index)=>\r\n                        <>\r\n                            <div>{index+1}</div>\r\n                            <div>{datafbo.date}</div>\r\n                            <div>{datafbo.subject}</div>\r\n                            <div>{datafbo.tbl_type}</div>\r\n                            <div>{datafbo.agency}</div>\r\n                            <div>{datafbo.office}</div>\r\n                            <hr/>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Solsearchresult;"]},"metadata":{},"sourceType":"module"}