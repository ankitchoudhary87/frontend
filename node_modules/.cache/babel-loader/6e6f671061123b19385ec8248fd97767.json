{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\whosin\\\\Frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Spinner } from 'react-bootstrap';\nimport useValidator from './useValidator';\nimport { adminLogin } from '../Services/userapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"script\", {\n  src: \"%PUBLIC_URL%/push.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (storedData) {\n      history.push(\"/\");\n    } else {\n      history.push(\"/login\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  }; //axios.post(\"http://localhost:9001/user/login\", user).then((res) => { })\n\n\n  const loginUser = async e => {\n    e.preventDefault();\n\n    if (validator.allValid()) {\n      setLoading(true);\n      let res = await adminLogin(user);\n\n      if (res.data.message === \"Login Successfully\") {\n        alert(res.data.message);\n        props.updateUserinlocalStorage(res.data.user);\n        setLoading(false);\n        history.push(\"/\");\n      } else {\n        setLoading(false);\n        alert(res.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        loginUser(e);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outsider\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newinputval\",\n            type: \"text\",\n            value: user.email,\n            placeholder: \"Enter your username\",\n            name: \"email\",\n            onChange: inputVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), validator.message('email', user.email, 'required', {\n            className: 'text-danger spacepart',\n            messages: {\n              required: \"Username is required\"\n            }\n          }), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newinputval\",\n            type: \"password\",\n            value: user.password,\n            autoComplete: \"on\",\n            placeholder: \"Enter your password\",\n            name: \"password\",\n            onChange: inputVal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), validator.message('password', user.password, 'required|min:4|max:12', {\n            className: 'text-danger spacepart',\n            messages: {\n              required: \"Password is required\"\n            }\n          }), !loading ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            style: {\n              marginTop: '15px',\n              width: 'auto',\n              background: 'rgba(237, 28, 36, 1)',\n              borderRadius: '3px',\n              border: '0 none',\n              padding: '15px 42px',\n              fontSize: '16px',\n              fontWeight: '500',\n              lineHeight: '16px',\n              cursor: 'pointer',\n              textTransform: 'capitalize',\n              color: 'rgba(255, 255, 255, 1)'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              marginTop: '15px',\n              width: 'auto',\n              background: 'rgba(237, 28, 36, 1)',\n              borderRadius: '3px',\n              border: '0 none',\n              padding: '15px 42px',\n              fontSize: '16px',\n              fontWeight: '500',\n              lineHeight: '16px',\n              cursor: 'pointer',\n              textTransform: 'capitalize',\n              color: 'rgba(255, 255, 255, 1)'\n            },\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"grow\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), \"Loading...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 356\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"IirGZL0ayEpo0H3SsaFqK0OmEPc=\", false, function () {\n  return [useHistory, useValidator];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Projects/whosin/Frontend/src/components/Login.js"],"names":["React","useState","useEffect","useHistory","Button","Spinner","useValidator","adminLogin","Login","props","history","validator","showValidationMessage","loading","setLoading","user","setUser","email","password","storedData","JSON","parse","localStorage","getItem","push","inputVal","e","name","value","target","loginUser","preventDefault","allValid","res","data","message","alert","updateUserinlocalStorage","className","messages","required","marginTop","width","background","borderRadius","border","padding","fontSize","fontWeight","lineHeight","cursor","textTransform","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport useValidator from './useValidator'\r\nimport { adminLogin } from '../Services/userapi';\r\n<script src=\"%PUBLIC_URL%/push.min.js\" ></script>\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (storedData) {\r\n            history.push(\"/\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    //axios.post(\"http://localhost:9001/user/login\", user).then((res) => { })\r\n    const loginUser = async (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setLoading(true);\r\n            let res = await adminLogin(user);\r\n            if (res.data.message === \"Login Successfully\") {\r\n                alert(res.data.message)\r\n                props.updateUserinlocalStorage(res.data.user);\r\n                setLoading(false);\r\n                history.push(\"/\");\r\n            } else {\r\n                setLoading(false);\r\n                alert(res.data.message)\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={(e) => { loginUser(e) }}>\r\n                {/* onChange={(e)=>{setUser({...user, f_name: e.target.value})}} */}\r\n                <div className=\"outsider\">\r\n                    <div className=\"login\">\r\n                        <div className=\"user_img\"></div>\r\n                        <br />\r\n\r\n                        <input className=\"newinputval\" type=\"text\" value={user.email} placeholder=\"Enter your username\" name=\"email\" onChange={inputVal} />\r\n                        {/**********   This is where the magic happens     ***********/}\r\n                        {validator.message('email', user.email, 'required', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Username is required\"\r\n                            }\r\n                        })}\r\n\r\n                        <input className=\"newinputval\" type=\"password\" value={user.password} autoComplete=\"on\" placeholder=\"Enter your password\" name=\"password\" onChange={inputVal} />\r\n                        {validator.message('password', user.password, 'required|min:4|max:12', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Password is required\"\r\n                            }\r\n                        })}\r\n\r\n\r\n                        { /* onClick={(e) => { loginUser(e) }} */}\r\n                        {!loading ? <Button type=\"submit\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Login</Button> : <Button variant=\"primary\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>}\r\n                        <br />\r\n                        {/* <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/register\") }}>Register  OR <Link to=\"/register\">Register</Link> </div>\r\n                    */}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}