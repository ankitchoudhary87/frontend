{"ast":null,"code":"const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\nexport default function swDev() {\n  function urlBase64ToUint8Array(base64String) {\n    const padding = \"=\".repeat((4 - base64String.length % 4) % 4); // eslint-disable-next-line\n\n    const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n\n  function determineAppServerKey() {\n    var vapidPublicKey = 'BLKxxh5Yr1dBH0oLSvtj4lD7e6pjyKRtm5Qw3x_DjM5c578EQTO-CrpmSo6Bk9ssh8WIQBQvFfMrw_ddABCfyfs';\n    return urlBase64ToUint8Array(vapidPublicKey);\n  }\n\n  if (storedData && storedData.user_id === '100') {\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n    navigator.serviceWorker.register(swUrl).then(response => {\n      //console.warn(\"Response\", response)\n      return response.pushManager.getSubscription().then(function (subscription) {\n        return response.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: determineAppServerKey()\n        });\n      });\n    });\n  }\n}","map":{"version":3,"sources":["C:/Projects/whosin/frontend/src/swDev.js"],"names":["storedData","JSON","parse","localStorage","getItem","swDev","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","determineAppServerKey","vapidPublicKey","user_id","swUrl","process","env","PUBLIC_URL","navigator","serviceWorker","register","then","response","pushManager","getSubscription","subscription","subscribe","userVisibleOnly","applicationServerKey"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAnB;AACA,eAAe,SAASC,KAAT,GAAgB;AAC3B,WAASC,qBAAT,CAA+BC,YAA/B,EAA6C;AACzC,UAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,CAAC,IAAIF,YAAY,CAACG,MAAb,GAAsB,CAA3B,IAAgC,CAA3C,CAAhB,CADyC,CAEzC;;AACA,UAAMC,MAAM,GAAG,CAACJ,YAAY,GAAGC,OAAhB,EAAyBI,OAAzB,CAAiC,KAAjC,EAAwC,GAAxC,EAA6CA,OAA7C,CAAqD,IAArD,EAA2D,GAA3D,CAAf;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAhB;AACA,UAAMK,WAAW,GAAG,IAAIC,UAAJ,CAAeJ,OAAO,CAACH,MAAvB,CAApB;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACH,MAA5B,EAAoC,EAAEQ,CAAtC,EAAyC;AACvCF,MAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBL,OAAO,CAACM,UAAR,CAAmBD,CAAnB,CAAjB;AACD;;AACD,WAAOF,WAAP;AACH;;AACD,WAASI,qBAAT,GAAgC;AAC5B,QAAIC,cAAc,GAAG,yFAArB;AACA,WAAOf,qBAAqB,CAACe,cAAD,CAA5B;AACH;;AACD,MAAGrB,UAAU,IAAIA,UAAU,CAACsB,OAAX,KAAuB,KAAxC,EAA8C;AAC1C,QAAIC,KAAK,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,QAAtC;AACAC,IAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiCN,KAAjC,EAAwCO,IAAxC,CAA8CC,QAAD,IAAY;AACrD;AACA,aAAOA,QAAQ,CAACC,WAAT,CAAqBC,eAArB,GACNH,IADM,CACD,UAAUI,YAAV,EAAuB;AACzB,eAAOH,QAAQ,CAACC,WAAT,CAAqBG,SAArB,CAA+B;AAClCC,UAAAA,eAAe,EAAE,IADiB;AAElCC,UAAAA,oBAAoB,EAAEjB,qBAAqB;AAFT,SAA/B,CAAP;AAIH,OANM,CAAP;AAOH,KATD;AAUH;AACJ","sourcesContent":["const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\nexport default function swDev(){\r\n    function urlBase64ToUint8Array(base64String) {\r\n        const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\r\n        // eslint-disable-next-line\r\n        const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\r\n        const rawData = window.atob(base64)\r\n        const outputArray = new Uint8Array(rawData.length)\r\n        for (let i = 0; i < rawData.length; ++i) {\r\n          outputArray[i] = rawData.charCodeAt(i)\r\n        }\r\n        return outputArray\r\n    }\r\n    function determineAppServerKey(){\r\n        var vapidPublicKey = 'BLKxxh5Yr1dBH0oLSvtj4lD7e6pjyKRtm5Qw3x_DjM5c578EQTO-CrpmSo6Bk9ssh8WIQBQvFfMrw_ddABCfyfs'\r\n        return urlBase64ToUint8Array(vapidPublicKey);\r\n    }\r\n    if(storedData && storedData.user_id === '100'){\r\n        let swUrl = `${process.env.PUBLIC_URL}/sw.js`\r\n        navigator.serviceWorker.register(swUrl).then((response)=>{\r\n            //console.warn(\"Response\", response)\r\n            return response.pushManager.getSubscription()\r\n            .then(function (subscription){\r\n                return response.pushManager.subscribe({\r\n                    userVisibleOnly: true,\r\n                    applicationServerKey: determineAppServerKey()\r\n                })\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}