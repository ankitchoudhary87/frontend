{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useValidator from './useValidator';\nimport { Form } from 'react-bootstrap';\nimport { getCategoryList } from '../Services/categoryapi';\nimport { addCategory, editsingleCategory, getsingleCategory } from '../Services/productapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = () => {\n  _s();\n\n  let myButton = '';\n  let {\n    prodID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [subcatdata, setSubcatdata] = useState([]);\n  const [category, setCategory] = useState({\n    name: \"\",\n    parentID: \"\",\n    dp: \"\"\n  }); // Getting the Subcategory dropdown data\n\n  useEffect(() => {\n    const getSubcatdataList = async () => {\n      let res = await getCategoryList();\n      setSubcatdata(res.data.catdata);\n    };\n\n    getSubcatdataList();\n  }, []);\n\n  const handlePhoto = e => {\n    setCategory({ ...product,\n      productPicture: e.target.files\n    });\n  }; //console.log(\"list data\", subcatdata)\n\n\n  useEffect(() => {\n    async function getproddata() {\n      if (prodID && prodID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleCategory(prodID);\n        setCategory({\n          name: res.data.catdata.name,\n          parentID: res.data.catdata.parentID,\n          dp: res.data.catdata.image\n        });\n      }\n    }\n\n    getproddata();\n  }, [catID]);\n  console.log(category);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCategory({ ...category,\n      [name]: value\n    });\n  };\n\n  const adddCategory = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', category.name);\n      formData.append('parentID', category.parentID);\n      formData.append('dp', category.dp);\n      let response = await addCategory(formData);\n\n      if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\n        alert(response.data.message);\n      } else {\n        alert(response.data.message);\n        history.push(\"/category\");\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateCategory = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', category.name);\n      formData.append('parentID', category.parentID);\n      formData.append('dp', category.dp);\n      let response = await editsingleCategory(catID, formData);\n\n      if (response.data.message === 'Category updated successfully') {\n        alert(response.data.message);\n        history.push(\"/category\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (catID && catID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateCategory();\n      },\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddCategory();\n      },\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 20\n    }, this);\n  }\n\n  const createCategoryList = (categories, options = [], sub_mark = '') => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: sub_mark + category.name,\n        children: category.parentID\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options, sub_mark + '---');\n      }\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: catID && catID !== undefined ? \"Update Product\" : \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: user.f_name,\n              placeholder: \"First Name\",\n              name: \"f_name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), validator.message('f_name', user.f_name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"First Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              style: {\n                marginLeft: \"15px\"\n              },\n              type: \"text\",\n              value: user.l_name,\n              placeholder: \"Last Name\",\n              name: \"l_name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), validator.message('l_name', user.l_name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Last Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '91%'\n            },\n            className: \"myinputclass\",\n            name: \"parentID\",\n            value: category.parentID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), createCategoryList(subcatdata).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Category Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 63\n              }, this), \"(Accept only .png, .jpg, .jpeg)\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              name: \"myFile\",\n              onChange: handlePhoto,\n              accept: \".png, .jpg, .jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 38\n          }, this), catID && catID !== undefined && category.dp && category.dp !== undefined && category.dp !== '[object File]' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: process.env.React_App_PUBLIC_URL + `${category.dp}`,\n            style: {\n              width: '110px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 136\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/products\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddProduct, \"iGSCMpwQbZJMVvjQZ6Lru3aj+ak=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddProduct.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","Form","getCategoryList","addCategory","editsingleCategory","getsingleCategory","AddProduct","myButton","prodID","history","validator","showValidationMessage","subcatdata","setSubcatdata","category","setCategory","name","parentID","dp","getSubcatdataList","res","data","catdata","handlePhoto","e","product","productPicture","target","files","getproddata","undefined","image","catID","console","log","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","value","adddCategory","allValid","formData","FormData","append","response","message","alert","updateCategory","createCategoryList","categories","options","sub_mark","children","length","width","minHeight","float","user","f_name","className","messages","required","marginLeft","l_name","map","option","process","env","React_App_PUBLIC_URL","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useValidator from './useValidator'\r\nimport { Form } from 'react-bootstrap'\r\nimport { getCategoryList } from '../Services/categoryapi'\r\nimport { addCategory, editsingleCategory, getsingleCategory } from '../Services/productapi'\r\nconst AddProduct = () => {\r\n    let myButton = '';\r\n    let { prodID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [subcatdata, setSubcatdata] = useState([]);\r\n    const [category, setCategory] = useState({\r\n        name: \"\",\r\n        parentID: \"\",\r\n        dp: \"\"\r\n    })\r\n    // Getting the Subcategory dropdown data\r\n    useEffect(() => {\r\n        const getSubcatdataList = async () => {\r\n            let res = await getCategoryList();\r\n            setSubcatdata(res.data.catdata)\r\n        }\r\n        getSubcatdataList()\r\n    }, [])\r\n\r\n    const handlePhoto = (e) => {\r\n        setCategory({ ...product, productPicture: e.target.files });\r\n    }\r\n    \r\n    //console.log(\"list data\", subcatdata)\r\n    useEffect(() => {\r\n        async function getproddata() {\r\n            if (prodID && prodID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleCategory(prodID);\r\n                setCategory({\r\n                    name: res.data.catdata.name,\r\n                    parentID: res.data.catdata.parentID,\r\n                    dp: res.data.catdata.image\r\n                })\r\n            }\r\n        }\r\n        getproddata()\r\n    }, [catID])\r\n\r\n    console.log(category);\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setCategory({\r\n            ...category,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddCategory = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', category.name)\r\n            formData.append('parentID', category.parentID)\r\n            formData.append('dp', category.dp)\r\n            let response = await addCategory(formData);\r\n            if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\r\n                alert(response.data.message);\r\n            } else {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateCategory = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', category.name)\r\n            formData.append('parentID', category.parentID)\r\n            formData.append('dp', category.dp)\r\n            let response = await editsingleCategory(catID, formData);\r\n            if (response.data.message === 'Category updated successfully') {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (catID && catID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateCategory() }}>Update Product</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddCategory() }}>Add Product</div>\r\n    }\r\n\r\n    const createCategoryList = (categories, options = [], sub_mark = '') => {\r\n        for (let category of categories) {\r\n            options.push({ value:  category._id, name: sub_mark+category.name, children: category.parentID});\r\n            if(category.children.length > 0){\r\n                createCategoryList(category.children, options, sub_mark+'---')\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setCategory({...category, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{catID && catID !== undefined ? \"Update Product\" : \"Add Product\"}</h1>\r\n                                        \r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '50%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={user.f_name} placeholder=\"First Name\" name=\"f_name\" onChange={inputVal} />\r\n                            {validator.message('f_name', user.f_name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"First Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div style={{ float: 'right', width: '50%' }}>\r\n                            <input className=\"myinputclass\" style={{ marginLeft: \"15px\" }} type=\"text\" value={user.l_name} placeholder=\"Last Name\" name=\"l_name\" onChange={inputVal} />\r\n                            {validator.message('l_name', user.l_name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Last Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        {/*<select style={{ width: '91%' }} className=\"myinputclass\" name=\"parentID\" value={category.parentID} onChange={inputVal}>\r\n                            <option value=\"\">\r\n                                Please Select Subcategory\r\n                            </option>\r\n                            {\r\n                                subcatdata.map((subcatnamedata, index) =>\r\n                                    <option value={subcatnamedata._id}>\r\n                                        {subcatnamedata.name}\r\n                                        {subcatnamedata.children.map((subcatchild, i) =>\r\n                                            \"\\n\" + '--' + subcatchild.name\r\n                                        )}\r\n                                    </option>\r\n                                )\r\n                            }\r\n                        </select>*/}\r\n\r\n\r\n                        <select style={{ width: '91%' }} className=\"myinputclass\" name=\"parentID\" value={category.parentID} onChange={inputVal}>\r\n                        <option value=\"\">Please Select Subcategory</option>\r\n                            {\r\n                                createCategoryList(subcatdata).map(option=>\r\n                                <option key={option.value} value={option.value}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                        \r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n\r\n\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Category Image: &nbsp;<br />(Accept only .png, .jpg, .jpeg)&nbsp;&nbsp;</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"myFile\" onChange={handlePhoto} accept=\".png, .jpg, .jpeg\" />\r\n                        </Form.Group><br />\r\n\r\n                        {catID && catID !== undefined && category.dp && category.dp !== undefined && category.dp !== '[object File]' ? <img alt=\"\" src={process.env.React_App_PUBLIC_URL + `${category.dp}`} style={{ width: '110px' }} /> : \"\"}\r\n\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/products\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}