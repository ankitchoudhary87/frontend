{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'; //import axios from 'axios';\n\nimport useValidator from './useValidator';\nimport { Form } from 'react-bootstrap';\nimport { addCategory, editsingleCategory, getsingleCategory, getCategoryList } from '../Services/categoryapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCategory = props => {\n  _s();\n\n  let myButton = '';\n  let {\n    catID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [subcatdata, setSubcatdata] = useState([]);\n  const [category, setCategory] = useState({\n    name: \"\",\n    parentID: \"\",\n    dp: \"\",\n    createdBy: \"\"\n  });\n\n  const handlePhoto = e => {\n    setCategory({ ...category,\n      dp: e.target.files[0]\n    });\n  }; // set the props as a default state in createdBy state\n\n\n  useEffect(() => {\n    if (props.loggedinuser._id) {\n      setCategory({ ...category,\n        createdBy: props.loggedinuser._id\n      });\n    }\n  }, [props.loggedinuser._id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    async function getcatdata() {\n      if (catID && catID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleCategory(catID);\n        setCategory({\n          name: res.data.catdata.name,\n          parentID: res.data.catdata.parentID,\n          dp: res.data.catdata.image,\n          createdBy: \"\"\n        });\n      }\n    }\n\n    getcatdata();\n  }, [catID]); // eslint-disable-line react-hooks/exhaustive-deps\n  //console.log(category);\n\n  useEffect(() => {\n    /*const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n    if (!storedData._id) {\r\n        history.push(\"/\");\r\n    }*/\n    // Getting the Subcategory dropdown data\n    const getSubcatdataList = async () => {\n      let res = await getCategoryList();\n      setSubcatdata(res.data.catdata);\n    };\n\n    getSubcatdataList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCategory({ ...category,\n      [name]: value\n    });\n  };\n\n  const adddCategory = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', category.name);\n      formData.append('parentID', category.parentID);\n      formData.append('dp', category.dp);\n      formData.append('createdBy', category.createdBy);\n      let response = await addCategory(formData);\n\n      if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\n        alert(response.data.message);\n      } else {\n        alert(response.data.message);\n        history.push(\"/category\");\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateCategory = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', category.name);\n      formData.append('parentID', category.parentID);\n      formData.append('dp', category.dp);\n      formData.append('createdBy', category.createdBy);\n      let response = await editsingleCategory(catID, formData);\n\n      if (response.data.message === 'Category updated successfully') {\n        alert(response.data.message);\n        history.push(\"/category\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (catID && catID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateCategory();\n      },\n      children: \"Update Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddCategory();\n      },\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 20\n    }, this);\n  }\n\n  const createCategoryList = (categories, options = [], sub_mark = '') => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: sub_mark + category.name,\n        children: category.parentID\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options, sub_mark + '---');\n      }\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: catID && catID !== undefined ? \"Update Category\" : \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: category.name,\n              placeholder: \"Category Name\",\n              name: \"name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), validator.message('name', category.name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Category Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '91%'\n            },\n            className: \"myinputclass\",\n            name: \"parentID\",\n            value: category.parentID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), createCategoryList(subcatdata).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Category Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 63\n              }, this), \"(Accept only .png, .jpg, .jpeg)\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              name: \"myFile\",\n              onChange: handlePhoto,\n              accept: \".png, .jpg, .jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 38\n          }, this), catID && catID !== undefined && category.dp && category.dp !== undefined && category.dp !== '[object File]' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: process.env.React_App_PUBLIC_URL + `${category.dp}`,\n            style: {\n              width: '110px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 136\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/category\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddCategory, \"+E7HV+i6TuPTRHrnm6P5C0MmW0A=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddCategory;\nexport default AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddCategory.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","Form","addCategory","editsingleCategory","getsingleCategory","getCategoryList","AddCategory","props","myButton","catID","history","validator","showValidationMessage","subcatdata","setSubcatdata","category","setCategory","name","parentID","dp","createdBy","handlePhoto","e","target","files","loggedinuser","_id","getcatdata","undefined","res","data","catdata","image","getSubcatdataList","inputVal","value","adddCategory","allValid","formData","FormData","append","response","message","alert","push","updateCategory","createCategoryList","categories","options","sub_mark","children","length","width","minHeight","float","className","messages","required","map","option","process","env","React_App_PUBLIC_URL","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport useValidator from './useValidator'\r\nimport { Form } from 'react-bootstrap'\r\nimport { addCategory, editsingleCategory, getsingleCategory, getCategoryList } from '../Services/categoryapi'\r\nconst AddCategory = (props) => {\r\n    let myButton = '';\r\n    let { catID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [subcatdata, setSubcatdata] = useState([]);\r\n    const [category, setCategory] = useState({\r\n        name: \"\",\r\n        parentID: \"\",\r\n        dp: \"\",\r\n        createdBy: \"\"\r\n    })\r\n    const handlePhoto = (e) => {\r\n        setCategory({ ...category, dp: e.target.files[0] });\r\n    }\r\n\r\n    // set the props as a default state in createdBy state\r\n    useEffect(() => {\r\n        if (props.loggedinuser._id) {\r\n            setCategory({ ...category, createdBy: props.loggedinuser._id });\r\n        }\r\n    }, [props.loggedinuser._id]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        async function getcatdata() {\r\n            if (catID && catID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleCategory(catID);\r\n                setCategory({\r\n                    name: res.data.catdata.name,\r\n                    parentID: res.data.catdata.parentID,\r\n                    dp: res.data.catdata.image,\r\n                    createdBy: \"\"\r\n                })\r\n            }\r\n        }\r\n        getcatdata()\r\n    }, [catID]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    //console.log(category);\r\n\r\n    useEffect(() => {\r\n        /*const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }*/\r\n        // Getting the Subcategory dropdown data\r\n        const getSubcatdataList = async () => {\r\n            let res = await getCategoryList();\r\n            setSubcatdata(res.data.catdata)\r\n        }\r\n        getSubcatdataList()\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setCategory({\r\n            ...category,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddCategory = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', category.name)\r\n            formData.append('parentID', category.parentID)\r\n            formData.append('dp', category.dp)\r\n            formData.append('createdBy', category.createdBy)\r\n            let response = await addCategory(formData);\r\n            if (response.data.message === 'Category Name already exist. Please enter another Category Name!') {\r\n                alert(response.data.message);\r\n            } else {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateCategory = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', category.name)\r\n            formData.append('parentID', category.parentID)\r\n            formData.append('dp', category.dp)\r\n            formData.append('createdBy', category.createdBy)\r\n            let response = await editsingleCategory(catID, formData);\r\n            if (response.data.message === 'Category updated successfully') {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (catID && catID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateCategory() }}>Update Category</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddCategory() }}>Add Category</div>\r\n    }\r\n\r\n    const createCategoryList = (categories, options = [], sub_mark = '') => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: sub_mark + category.name, children: category.parentID });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options, sub_mark + '---')\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setCategory({...category, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{catID && catID !== undefined ? \"Update Category\" : \"Add Category\"}</h1>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '100%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={category.name} placeholder=\"Category Name\" name=\"name\" onChange={inputVal} />\r\n                            {validator.message('name', category.name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Category Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n\r\n                        <select style={{ width: '91%' }} className=\"myinputclass\" name=\"parentID\" value={category.parentID} onChange={inputVal}>\r\n                            <option value=\"\">Please Select Subcategory</option>\r\n                            {\r\n                                createCategoryList(subcatdata).map(option =>\r\n                                    <option key={option.value} value={option.value}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n\r\n\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Category Image: &nbsp;<br />(Accept only .png, .jpg, .jpeg)&nbsp;&nbsp;</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"myFile\" onChange={handlePhoto} accept=\".png, .jpg, .jpeg\" />\r\n                        </Form.Group><br />\r\n\r\n                        {catID && catID !== undefined && category.dp && category.dp !== undefined && category.dp !== '[object File]' ? <img alt=\"\" src={process.env.React_App_PUBLIC_URL + `${category.dp}`} style={{ width: '110px' }} /> : \"\"}\r\n\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/category\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}