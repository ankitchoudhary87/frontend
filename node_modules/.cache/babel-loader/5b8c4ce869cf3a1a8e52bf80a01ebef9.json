{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Spinner } from 'react-bootstrap';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().required('Please enter correct email address').email(),\n  password: yup.string().required().min(5).max(12)\n});\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    login,\n    handleSubmit,\n    error\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  console.log(\"All Errors \", errors);\n  const validator = new SimpleReactValidator();\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    loading: false\n  });\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (storedData._id && storedData._id !== \"\") {\n      history.push(\"/\");\n    } else {\n      history.push(\"/login\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const loginUser = () => {\n    //const {email, password} = user\n    setUser({ ...user,\n      loading: true\n    });\n    axios.post(\"http://localhost:9001/user/login\", user).then(res => {\n      if (res.data.message === \"Login Successfully\") {\n        alert(res.data.message);\n        props.updateUserinlocalStorage(res.data.user);\n        history.push(\"/\");\n      } else {\n        alert(res.data.message);\n      }\n\n      setUser({ ...user,\n        loading: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outsider\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: user.email,\n            placeholder: \"Email Address\",\n            name: \"email\",\n            onChange: inputVal,\n            ref: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: user.password,\n            placeholder: \"Password\",\n            name: \"password\",\n            onChange: inputVal,\n            ref: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), !user.loading ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              loginUser();\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"grow\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), \"Loading...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 27\n          }, this), \"Forgot Password \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot\",\n            children: \"Click Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"CcmWLcGBhjwU5Vnhq5FsI/2eaCg=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Login.js"],"names":["React","useState","useEffect","useHistory","Link","axios","Button","Spinner","SimpleReactValidator","useForm","yupResolver","yup","schema","object","shape","email","string","required","password","min","max","Login","props","history","login","handleSubmit","error","resolver","onSubmit","data","console","log","errors","validator","user","setUser","loading","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","e","name","value","target","loginUser","post","then","res","message","alert","updateUserinlocalStorage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAOC,OAAP,QAAqB,iBAArB;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,KAAK,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,oCAAtB,EAA4DF,KAA5D,EADyB;AAEhCG,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,GAAwBE,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC;AAFsB,CAAnB,CAAf;;AAKA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,OAAO,GAAGpB,UAAU,EAA1B;AACA,QAAM;AAACqB,IAAAA,KAAD;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,MAA+BjB,OAAO,CAAC;AACzCkB,IAAAA,QAAQ,EAAEjB,WAAW,CAACE,MAAD;AADoB,GAAD,CAA5C;;AAGA,QAAMgB,QAAQ,GAAKC,IAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BC,MAA1B;AAEA,QAAMC,SAAS,GAAG,IAAIzB,oBAAJ,EAAlB;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC;AAC7Bc,IAAAA,KAAK,EAAE,EADsB;AAE7BG,IAAAA,QAAQ,EAAE,EAFmB;AAG7BkB,IAAAA,OAAO,EAAE;AAHoB,GAAD,CAAhC;AAMAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAnB;;AACA,QAAIJ,UAAU,CAACK,GAAX,IAAkBL,UAAU,CAACK,GAAX,KAAmB,EAAzC,EAA6C;AACzCnB,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACH,KAFD,MAEO;AACHpB,MAAAA,OAAO,CAACoB,IAAR,CAAa,QAAb;AACH;AACJ,GAPQ,EAON,EAPM,CAAT,CAfqB,CAsBb;;AACR,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAb,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACY,IAAD,GAAQC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAOA,QAAME,SAAS,GAAG,MAAM;AAChB;AACAd,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,MAAAA,OAAO,EAAE;AAApB,KAAD,CAAP;AACA/B,IAAAA,KAAK,CAAC6C,IAAN,CAAW,kCAAX,EAA+ChB,IAA/C,EAAqDiB,IAArD,CAA2DC,GAAD,IAAS;AAC/D,UAAIA,GAAG,CAACvB,IAAJ,CAASwB,OAAT,KAAqB,oBAAzB,EAA+C;AAC3CC,QAAAA,KAAK,CAACF,GAAG,CAACvB,IAAJ,CAASwB,OAAV,CAAL;AACA/B,QAAAA,KAAK,CAACiC,wBAAN,CAA+BH,GAAG,CAACvB,IAAJ,CAASK,IAAxC;AACAX,QAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACH,OAJD,MAIO;AACHW,QAAAA,KAAK,CAACF,GAAG,CAACvB,IAAJ,CAASwB,OAAV,CAAL;AACH;;AACDlB,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,QAAAA,OAAO,EAAE;AAApB,OAAD,CAAP;AACH,KATD;AAWP,GAdD;;AAeA,sBACI;AAAA,2BAEI;AAAM,MAAA,QAAQ,EAAEX,YAAY,CAACG,QAAD,CAA5B;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEM,IAAI,CAACnB,KAA/B;AAAsC,YAAA,WAAW,EAAC,eAAlD;AAAkE,YAAA,IAAI,EAAC,OAAvE;AAA+E,YAAA,QAAQ,EAAE6B,QAAzF;AAAmG,YAAA,GAAG,EAAEpB;AAAxG;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,KAAK,EAAEU,IAAI,CAAChB,QAAnC;AAA6C,YAAA,WAAW,EAAC,UAAzD;AAAoE,YAAA,IAAI,EAAC,UAAzE;AAAoF,YAAA,QAAQ,EAAE0B,QAA9F;AAAwG,YAAA,GAAG,EAAEpB;AAA7G;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAMK,CAACU,IAAI,CAACE,OAAN,gBAAgB,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAM;AAAEa,cAAAA,SAAS;AAAI,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB,gBAAyE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,QAAQ,MAAlC;AAAA,oCACtE,QAAC,OAAD;AACI,cAAA,EAAE,EAAC,MADP;AAEI,cAAA,SAAS,EAAC,MAFd;AAGI,cAAA,IAAI,EAAC,IAHT;AAII,cAAA,IAAI,EAAC,QAJT;AAKI,6BAAY;AALhB;AAAA;AAAA;AAAA;AAAA,oBADsE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAN9E,eAgBI;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAgBU;AAAA;AAAA;AAAA;AAAA,kBAhBV,mCAiBoB,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA+BH,CA5ED;;GAAM5B,K;UACclB,U,EACqBM,O;;;KAFnCY,K;AA6EN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport{useForm} from 'react-hook-form'\r\n\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().required('Please enter correct email address').email(),\r\n  password: yup.string().required().min(5).max(12),\r\n});\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    const {login, handleSubmit, error} = useForm({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const onSubmit =  (data)=> console.log(data);\r\n    console.log(\"All Errors \",errors)\r\n\r\n    const validator = new SimpleReactValidator();\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        loading: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (storedData._id && storedData._id !== \"\") {\r\n            history.push(\"/\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    const loginUser = () => {\r\n            //const {email, password} = user\r\n            setUser({ ...user, loading: true })\r\n            axios.post(\"http://localhost:9001/user/login\", user).then((res) => {\r\n                if (res.data.message === \"Login Successfully\") {\r\n                    alert(res.data.message)\r\n                    props.updateUserinlocalStorage(res.data.user);\r\n                    history.push(\"/\");\r\n                } else {\r\n                    alert(res.data.message)\r\n                }\r\n                setUser({ ...user, loading: false })\r\n            })\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setUser({...user, f_name: e.target.value})}} */}\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"outsider\">\r\n                <div className=\"login\">\r\n                    <h2>Login</h2>\r\n                    <input type=\"text\" value={user.email} placeholder=\"Email Address\" name=\"email\" onChange={inputVal} ref={login} />\r\n                   \r\n                    <input type=\"password\" value={user.password} placeholder=\"Password\" name=\"password\" onChange={inputVal} ref={login} />\r\n                   \r\n                    {!user.loading ? <Button onClick={() => { loginUser() }}>Login</Button> : <Button variant=\"primary\" disabled>\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        Loading...\r\n                    </Button>}\r\n                    <br /><br />\r\n                    Forgot Password <Link to=\"/forgot\">Click Here</Link>\r\n                    {/* <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/register\") }}>Register  OR <Link to=\"/register\">Register</Link> </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}