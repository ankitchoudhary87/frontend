{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'; //import axios from 'axios';\n\nimport useValidator from './useValidator';\nimport { addCategory, editCategory, getCategories } from '../Services/categoryapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddCategory = () => {\n  _s();\n\n  let myButton = '';\n  let {\n    catID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [category, setCategory] = useState({\n    name: \"\",\n    parentID: \"\"\n  });\n  useEffect(() => {\n    async function getcatdata() {\n      if (catID && catID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleUsers(catID);\n        setCategory({\n          name: res.data.userdata.name,\n          parentID: res.data.userdata.parentID\n        });\n      }\n    }\n\n    getcatdata();\n  }, [catID]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCategory({ ...category,\n      [name]: value\n    });\n  };\n\n  const adddCategory = async () => {\n    if (validator.allValid()) {\n      let response = await addCategory(category);\n\n      if (response.data.message === 'Category already registerd. Please use another Category Name!') {\n        alert(response.data.message);\n      } else {\n        alert(response.data.message);\n        history.push(\"/category\");\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateCategory = async () => {\n    if (validator.allValid()) {\n      let response = await editCategory(catID, category);\n\n      if (response.data.message === 'Category updated successfully') {\n        alert(response.data.message);\n        history.push(\"/category\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (catID && catID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateCategory();\n      },\n      children: \"Update Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddCategory();\n      },\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: catID && catID !== undefined ? \"Update Category\" : \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: category.name,\n              placeholder: \"Category Name\",\n              name: \"name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), validator.message('name', category.name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Category Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '91%'\n            },\n            className: \"myinputclass\",\n            name: \"parentID\",\n            value: category.parentID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Subcategory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Super Admin\",\n              children: \"Super Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Staff\",\n              children: \"Staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Account\",\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/category\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddCategory, \"xVA+752i20EHHdlTuXqURCRSIhk=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddCategory;\nexport default AddCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddCategory.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","addCategory","editCategory","getCategories","AddCategory","myButton","catID","history","validator","showValidationMessage","category","setCategory","name","parentID","getcatdata","undefined","res","getsingleUsers","data","userdata","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","e","value","target","adddCategory","allValid","response","message","alert","updateCategory","width","minHeight","float","className","messages","required","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport useValidator from './useValidator'\r\nimport {addCategory, editCategory, getCategories} from '../Services/categoryapi'\r\nconst AddCategory = () => {\r\n    let myButton = '';\r\n    let { catID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [category, setCategory] = useState({\r\n        name: \"\",\r\n        parentID: \"\"\r\n    })\r\n    useEffect(() => {\r\n        async function getcatdata() {\r\n            if (catID && catID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleUsers(catID);\r\n                setCategory({\r\n                    name: res.data.userdata.name,\r\n                    parentID: res.data.userdata.parentID\r\n                })\r\n            }\r\n        }\r\n        getcatdata()\r\n    }, [catID])\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setCategory({\r\n            ...category,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddCategory = async () => {\r\n        if (validator.allValid()) {\r\n            let response = await addCategory(category);\r\n            if (response.data.message === 'Category already registerd. Please use another Category Name!') {\r\n                alert(response.data.message);\r\n            } else {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateCategory = async () => {\r\n        if (validator.allValid()) {\r\n            let response = await editCategory(catID, category);\r\n            if (response.data.message === 'Category updated successfully') {\r\n                alert(response.data.message);\r\n                history.push(\"/category\");\r\n            }else{\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (catID && catID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateCategory() }}>Update Category</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddCategory() }}>Add Category</div>\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setCategory({...category, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{catID && catID !== undefined ? \"Update Category\" : \"Add Category\"}</h1>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '100%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={category.name} placeholder=\"Category Name\" name=\"name\" onChange={inputVal} />\r\n                            {validator.message('name', category.name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Category Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <select style={{ width: '91%' }} className=\"myinputclass\" name=\"parentID\" value={category.parentID} onChange={inputVal}>\r\n                            <option value=\"\">\r\n                                Please Select Subcategory\r\n                            </option>\r\n                            <option value=\"Super Admin\">\r\n                                Super Admin\r\n                            </option>\r\n                            <option value=\"Admin\">\r\n                                Admin\r\n                            </option>\r\n                            <option value=\"Staff\">\r\n                                Staff\r\n                            </option>\r\n                            <option value=\"Account\">\r\n                                Account\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/category\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}