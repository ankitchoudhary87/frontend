{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useValidator from './useValidator';\nimport { Form } from 'react-bootstrap';\nimport { getCategoryList } from '../Services/categoryapi';\nimport { addProduct, editsingleProduct, getsingleProduct, addImages } from '../Services/productapi'; //import NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\n\nimport Productimages from './Productimages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  let myButton = '';\n  let {\n    prodID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [subcatdata, setSubcatdata] = useState([]);\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [product, setProduct] = useState({\n    name: \"\",\n    quantity: \"\",\n    price: \"\",\n    categoryID: \"\",\n    discount: \"\",\n    description: \"\",\n    productPicture: [],\n    productPictureviewonly: \"\",\n    imageuploaded: 'false',\n    createdBy: \"\"\n  }); // set the props as a default state in createdBy state\n\n  useEffect(() => {\n    if (props.loggedinuser._id) {\n      setProduct({ ...product,\n        createdBy: props.loggedinuser._id\n      });\n    }\n  }, [props.loggedinuser._id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handlePhoto = async e => {\n    let formData = new FormData();\n    const options = {\n      onUploadProgress: progressEvent => {\n        const {\n          loaded,\n          total\n        } = progressEvent;\n        let percent = Math.floor(loaded * 100 / total);\n        console.log(`${loaded}kb of ${total}kb | ${percent}%`);\n\n        if (percent < 100) {\n          setUploadPercentage(percent);\n        }\n      }\n    }; //let productPicturelatest = []\n\n    Array.from(e.target.files).forEach(file => {\n      formData.append('files', file); ///productPicturelatest.push(file);\n      //console.log(new Date().getTime() + '-' + file.name)\n    });\n    let response = await addImages(formData, options); //console.log(\"AABBCC\", response.data)\n\n    setProduct({ ...product,\n      imageuploaded: 'true',\n      productPicture: response.data\n    }); //setProduct({ ...product, productPicture: productPicturelatest });\n  }; //console.log(\"list data\", subcatdata)\n\n\n  useEffect(() => {\n    async function getproddata() {\n      if (prodID && prodID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleProduct(prodID);\n        setProduct({\n          name: res.data.productdata.name,\n          quantity: res.data.productdata.quantity,\n          price: res.data.productdata.price,\n          categoryID: res.data.productdata.categoryID,\n          discount: res.data.productdata.discount,\n          description: res.data.productdata.description,\n          productPicture: res.data.productdata.productPictures,\n          productPictureviewonly: res.data.productdata.productPictures,\n          imageuploaded: 'false',\n          createdBy: \"\"\n        });\n      }\n    }\n\n    getproddata();\n  }, [prodID]); // eslint-disable-line react-hooks/exhaustive-deps\n  //console.log(product);\n\n  useEffect(() => {\n    document.title = \"Add Products\";\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    } // Getting the Subcategory dropdown data\n\n\n    const getSubcatdataList = async () => {\n      let res = await getCategoryList();\n      setSubcatdata(res.data.catdata);\n    };\n\n    getSubcatdataList();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  const adddProduct = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', product.name);\n      formData.append('quantity', product.quantity);\n      formData.append('price', product.price);\n      formData.append('categoryID', product.categoryID);\n      formData.append('discount', product.discount);\n      formData.append('description', product.description);\n      formData.append('imageuploaded', product.imageuploaded);\n      formData.append('productPicture', product.productPicture);\n      formData.append('createdBy', product.createdBy);\n      let response = await addProduct(formData);\n\n      if (response.data.message === 'Product created Successfully.') {\n        setProduct({ ...product,\n          imageuploaded: 'false'\n        });\n        alert(response.data.message);\n        history.push(\"/products\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateProduct = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', product.name);\n      formData.append('quantity', product.quantity);\n      formData.append('price', product.price);\n      formData.append('categoryID', product.categoryID);\n      formData.append('discount', product.discount);\n      formData.append('description', product.description);\n      formData.append('imageuploaded', product.imageuploaded);\n      formData.append('productPicture', product.productPicture);\n      formData.append('createdBy', product.createdBy);\n      let response = await editsingleProduct(prodID, formData);\n\n      if (response.data.message === 'Product updated successfully') {\n        setProduct({ ...product,\n          imageuploaded: 'false'\n        });\n        alert(response.data.message);\n        history.push(\"/products\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (prodID && prodID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateProduct();\n      },\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddProduct();\n      },\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 20\n    }, this);\n  }\n\n  const createCategoryList = (categories, options = [], sub_mark = '') => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: sub_mark + category.name,\n        children: category.parentID\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options, sub_mark + '---');\n      }\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: prodID && prodID !== undefined ? \"Update Product\" : \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: product.name,\n              placeholder: \"Product Name\",\n              name: \"name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), validator.message('name', product.name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Product Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              style: {\n                marginLeft: \"15px\"\n              },\n              type: \"text\",\n              value: product.quantity,\n              placeholder: \"Quantity\",\n              name: \"quantity\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), validator.message('quantity', product.quantity, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Quantity is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: product.price,\n              placeholder: \"Product Price\",\n              name: \"price\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), validator.message('price', product.price, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Product Price is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              width: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              style: {\n                marginLeft: \"15px\"\n              },\n              type: \"text\",\n              value: product.discount,\n              placeholder: \"Discount in %\",\n              name: \"discount\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '96%'\n            },\n            className: \"myinputclass\",\n            name: \"categoryID\",\n            value: product.categoryID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), createCategoryList(subcatdata).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), validator.message('categoryID', product.categoryID, 'required', {\n            className: 'text-danger mywidth',\n            messages: {\n              required: \"Category is required\"\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"description\",\n              value: product.description,\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Product Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 62\n              }, this), \"(Accept only .png, .jpg, .jpeg)\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              multiple: true,\n              name: \"productPicture\",\n              onChange: handlePhoto,\n              accept: \".png, .jpg, .jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(Productimages, {\n            prodID: prodID,\n            product: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/products\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddProduct, \"+IOnaNwgBNIvo38D/hSsNdjDKGE=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddProduct.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","Form","getCategoryList","addProduct","editsingleProduct","getsingleProduct","addImages","Productimages","AddProduct","props","myButton","prodID","history","validator","showValidationMessage","subcatdata","setSubcatdata","uploadPercentage","setUploadPercentage","product","setProduct","name","quantity","price","categoryID","discount","description","productPicture","productPictureviewonly","imageuploaded","createdBy","loggedinuser","_id","handlePhoto","e","formData","FormData","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","console","log","Array","from","target","files","forEach","file","append","response","data","getproddata","undefined","res","productdata","productPictures","document","title","storedData","JSON","parse","localStorage","getItem","push","getSubcatdataList","catdata","inputVal","value","adddProduct","allValid","message","alert","updateProduct","createCategoryList","categories","sub_mark","category","children","parentID","length","width","minHeight","float","className","messages","required","marginLeft","map","option","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useValidator from './useValidator'\r\nimport { Form } from 'react-bootstrap'\r\nimport { getCategoryList } from '../Services/categoryapi'\r\nimport { addProduct, editsingleProduct, getsingleProduct, addImages } from '../Services/productapi'\r\n//import NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\nimport Productimages from './Productimages'\r\nconst AddProduct = (props) => {\r\n    let myButton = '';\r\n    let { prodID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [subcatdata, setSubcatdata] = useState([]);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0)\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        quantity: \"\",\r\n        price: \"\",\r\n        categoryID: \"\",\r\n        discount: \"\",\r\n        description: \"\",\r\n        productPicture: [],\r\n        productPictureviewonly : \"\",\r\n        imageuploaded: 'false',\r\n        createdBy: \"\"\r\n    })\r\n\r\n    // set the props as a default state in createdBy state\r\n    useEffect(() => {\r\n        if (props.loggedinuser._id) {\r\n            setProduct({...product, createdBy : props.loggedinuser._id});\r\n        }\r\n    }, [props.loggedinuser._id]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const handlePhoto = async (e) => {\r\n        let formData = new FormData();\r\n\r\n        const options = {\r\n            onUploadProgress: (progressEvent) => {\r\n              const {loaded, total} = progressEvent;\r\n              let percent = Math.floor( (loaded * 100) / total )\r\n              console.log( `${loaded}kb of ${total}kb | ${percent}%` );\r\n      \r\n              if( percent < 100 ){\r\n                setUploadPercentage(percent)\r\n              }\r\n            }\r\n          }\r\n\r\n        //let productPicturelatest = []\r\n        Array.from(e.target.files)\r\n            .forEach(file => {\r\n                formData.append('files', file);\r\n                ///productPicturelatest.push(file);\r\n                //console.log(new Date().getTime() + '-' + file.name)\r\n            });\r\n        let response = await addImages(formData, options);\r\n        //console.log(\"AABBCC\", response.data)\r\n        setProduct({ ...product, imageuploaded: 'true', productPicture: response.data });\r\n        //setProduct({ ...product, productPicture: productPicturelatest });\r\n    }\r\n\r\n    //console.log(\"list data\", subcatdata)\r\n    useEffect(() => {\r\n        async function getproddata() {\r\n            if (prodID && prodID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleProduct(prodID);\r\n                setProduct({\r\n                    name: res.data.productdata.name,\r\n                    quantity: res.data.productdata.quantity,\r\n                    price: res.data.productdata.price,\r\n                    categoryID: res.data.productdata.categoryID,\r\n                    discount: res.data.productdata.discount,\r\n                    description: res.data.productdata.description,\r\n                    productPicture: res.data.productdata.productPictures,\r\n                    productPictureviewonly: res.data.productdata.productPictures,\r\n                    imageuploaded: 'false',\r\n                    createdBy: \"\"\r\n                })\r\n            }\r\n        }\r\n        getproddata()\r\n    }, [prodID]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    //console.log(product);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Add Products\";\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n        // Getting the Subcategory dropdown data\r\n        const getSubcatdataList = async () => {\r\n            let res = await getCategoryList();\r\n            setSubcatdata(res.data.catdata)\r\n        }\r\n        getSubcatdataList()\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setProduct({\r\n            ...product,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddProduct = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name)\r\n            formData.append('quantity', product.quantity)\r\n            formData.append('price', product.price)\r\n            formData.append('categoryID', product.categoryID)\r\n            formData.append('discount', product.discount)\r\n            formData.append('description', product.description)\r\n            formData.append('imageuploaded', product.imageuploaded)\r\n            formData.append('productPicture', product.productPicture)\r\n            formData.append('createdBy', product.createdBy)\r\n            let response = await addProduct(formData);\r\n            if (response.data.message === 'Product created Successfully.') {\r\n                setProduct({ ...product, imageuploaded: 'false' });\r\n                alert(response.data.message);\r\n                history.push(\"/products\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateProduct = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name)\r\n            formData.append('quantity', product.quantity)\r\n            formData.append('price', product.price)\r\n            formData.append('categoryID', product.categoryID)\r\n            formData.append('discount', product.discount)\r\n            formData.append('description', product.description)\r\n            formData.append('imageuploaded', product.imageuploaded)\r\n            formData.append('productPicture', product.productPicture)\r\n            formData.append('createdBy', product.createdBy)\r\n            let response = await editsingleProduct(prodID, formData);\r\n            if (response.data.message === 'Product updated successfully') {\r\n                setProduct({ ...product, imageuploaded: 'false' });\r\n                alert(response.data.message);\r\n                history.push(\"/products\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (prodID && prodID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateProduct() }}>Update Product</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddProduct() }}>Add Product</div>\r\n    }\r\n\r\n    const createCategoryList = (categories, options = [], sub_mark = '') => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: sub_mark + category.name, children: category.parentID });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options, sub_mark + '---')\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setProduct({...product, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{prodID && prodID !== undefined ? \"Update Product\" : \"Add Product\"}</h1>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '50%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={product.name} placeholder=\"Product Name\" name=\"name\" onChange={inputVal} />\r\n                            {validator.message('name', product.name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Product Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div style={{ float: 'right', width: '50%' }}>\r\n                            <input className=\"myinputclass\" style={{ marginLeft: \"15px\" }} type=\"text\" value={product.quantity} placeholder=\"Quantity\" name=\"quantity\" onChange={inputVal} />\r\n                            {validator.message('quantity', product.quantity, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Quantity is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '50%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={product.price} placeholder=\"Product Price\" name=\"price\" onChange={inputVal} />\r\n                            {validator.message('price', product.price, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Product Price is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div style={{ float: 'right', width: '50%' }}>\r\n                            <input className=\"myinputclass\" style={{ marginLeft: \"15px\" }} type=\"text\" value={product.discount} placeholder=\"Discount in %\" name=\"discount\" onChange={inputVal} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <select style={{ width: '96%' }} className=\"myinputclass\" name=\"categoryID\" value={product.categoryID} onChange={inputVal}>\r\n                            <option value=\"\">Please Select Category</option>\r\n                            {\r\n                                createCategoryList(subcatdata).map(option =>\r\n                                    <option key={option.value} value={option.value}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                        {validator.message('categoryID', product.categoryID, 'required', {\r\n                            className: 'text-danger mywidth',\r\n                            messages: {\r\n                                required: \"Category is required\"\r\n                            }\r\n                        })}\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control as=\"textarea\" rows={3} name=\"description\" value={product.description} onChange={inputVal} />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Product Image: &nbsp;<br />(Accept only .png, .jpg, .jpeg)&nbsp;&nbsp;</Form.Label>\r\n                            <Form.Control type=\"file\" multiple name=\"productPicture\" onChange={handlePhoto} accept=\".png, .jpg, .jpeg\" />\r\n                        </Form.Group><br />\r\n                        \r\n                        <Productimages prodID={prodID} product={product} />\r\n\r\n\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/products\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}