{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Paginations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Container, DropdownButton, Dropdown, Button, Pagination, Spinner } from 'react-bootstrap';\nimport \"./paginationstyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginations = ({\n  userdata,\n  getPagination\n}) => {\n  _s();\n\n  // Pagination Code Starts Here\n  const [currentPage, setcurrentPage] = useState(1);\n  const [itemsPerPage, setitemsPerPage] = useState(5);\n  const [pageNumberLimit, setpageNumberLimit] = useState(5);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n  const handleClick = event => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(userdata.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  console.log(\"WWWW\", indexOfLastItem);\n  const currentItems = userdata.slice(indexOfFirstItem, indexOfLastItem);\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: number,\n        onClick: handleClick,\n        className: currentPage === number ? \"active\" : null,\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handleNextbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this);\n  }\n\n  let pageDecrementBtn = null;\n\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: handlePrevbtn,\n      children: \" \\u2026 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this);\n  }\n  /*\r\n  const handleLoadMore = () => {\r\n      setitemsPerPage(itemsPerPage + 5);\r\n  };\r\n  */\n\n\n  useEffect(() => {\n    getPagination(currentItems);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pageNumbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevbtn,\n            disabled: currentPage === pages[0] ? true : false,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), pageDecrementBtn, /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          children: renderPageNumbers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), pageIncrementBtn, /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextbtn,\n            disabled: currentPage === pages[pages.length - 1] ? true : false,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginations, \"JGCRW22p77aIj61Xo/U+v0CD/6Y=\");\n\n_c = Paginations;\nexport default Paginations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginations\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Paginations.js"],"names":["React","useEffect","useState","Table","Container","DropdownButton","Dropdown","Button","Pagination","Spinner","Paginations","userdata","getPagination","currentPage","setcurrentPage","itemsPerPage","setitemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","console","log","currentItems","slice","renderPageNumbers","map","number","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table, Container, DropdownButton, Dropdown, Button, Pagination, Spinner } from 'react-bootstrap'\r\nimport \"./paginationstyle.css\";\r\nconst Paginations = ({userdata, getPagination}) => {\r\n    \r\n    // Pagination Code Starts Here\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        setcurrentPage(Number(event.target.id));\r\n    };\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(userdata.length / itemsPerPage); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n\r\n    console.log(\"WWWW\",indexOfLastItem)\r\n\r\n    const currentItems = userdata.slice(indexOfFirstItem, indexOfLastItem);\r\n    const renderPageNumbers = pages.map((number) => {\r\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n            return (\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={handleClick}\r\n                    className={currentPage === number ? \"active\" : null}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    const handleNextbtn = () => {\r\n        setcurrentPage(currentPage + 1);\r\n\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n        if ((currentPage - 1) % pageNumberLimit === 0) {\r\n            setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    let pageIncrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit) {\r\n        pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n    if (minPageNumberLimit >= 1) {\r\n        pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\r\n    }\r\n    /*\r\n    const handleLoadMore = () => {\r\n        setitemsPerPage(itemsPerPage + 5);\r\n    };\r\n    */\r\n\r\n    useEffect(()=>{\r\n        getPagination(currentItems);\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n                <div style={{ marginTop: '30px' }}>\r\n                    <ul className=\"pageNumbers\">\r\n                        <li>\r\n                            <button\r\n                                onClick={handlePrevbtn}\r\n                                disabled={currentPage === pages[0] ? true : false}\r\n                            >\r\n                                Prev\r\n                            </button>\r\n                        </li>\r\n                        {pageDecrementBtn}\r\n                        <Pagination size=\"sm\">{renderPageNumbers}</Pagination>\r\n                        {pageIncrementBtn}\r\n\r\n                        <li>\r\n                            <button\r\n                                onClick={handleNextbtn}\r\n                                disabled={currentPage === pages[pages.length - 1] ? true : false}\r\n                            >\r\n                                Next\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                    {/*<button onClick={handleLoadMore} className=\"loadmore\">\r\n                    Load More\r\n                </button>*/}\r\n                </div>\r\n            </div>\r\n    );\r\n}; \r\n\r\nexport default Paginations;"]},"metadata":{},"sourceType":"module"}