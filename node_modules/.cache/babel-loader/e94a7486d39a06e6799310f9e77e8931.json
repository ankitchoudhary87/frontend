{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useValidator from './useValidator';\nimport { Form } from 'react-bootstrap';\nimport { getCategoryList } from '../Services/categoryapi';\nimport { addProduct, editsingleProduct, getsingleProduct, addImages } from '../Services/productapi';\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = () => {\n  _s();\n\n  let myButton = '';\n  let {\n    prodID\n  } = useParams();\n  const history = useHistory();\n  const [validator, showValidationMessage] = useValidator();\n  const [subcatdata, setSubcatdata] = useState([]);\n  const [product, setProduct] = useState({\n    name: \"\",\n    quantity: \"\",\n    price: \"\",\n    categoryID: \"\",\n    discount: \"\",\n    description: \"\",\n    productPicture: [],\n    imageuploaded: 'false'\n  }); // Getting the Subcategory dropdown data\n\n  useEffect(() => {\n    const getSubcatdataList = async () => {\n      let res = await getCategoryList();\n      setSubcatdata(res.data.catdata);\n    };\n\n    getSubcatdataList();\n  }, []);\n\n  const handlePhoto = async e => {\n    let formData = new FormData(); //let productPicturelatest = []\n\n    Array.from(e.target.files).forEach(file => {\n      formData.append('files', file); ///productPicturelatest.push(file);\n      //console.log(new Date().getTime() + '-' + file.name)\n    });\n    let response = await addImages(formData); //console.log(\"AABBCC\", response.data)\n\n    setProduct({ ...product,\n      imageuploaded: 'true',\n      productPicture: response.data\n    }); //setProduct({ ...product, productPicture: productPicturelatest });\n  }; //console.log(\"list data\", subcatdata)\n\n\n  useEffect(() => {\n    async function getproddata() {\n      if (prodID && prodID !== undefined) {\n        //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\n        let res = await getsingleProduct(prodID);\n        setProduct({\n          name: res.data.productdata.name,\n          quantity: res.data.productdata.quantity,\n          price: res.data.productdata.price,\n          categoryID: res.data.productdata.categoryID,\n          discount: res.data.productdata.discount,\n          description: res.data.productdata.description,\n          productPicture: res.data.productdata.productPictures,\n          imageuploaded: 'false'\n        });\n      }\n    }\n\n    getproddata();\n  }, [prodID]);\n  console.log(product);\n  useEffect(() => {\n    document.title = \"Add Products\";\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (!storedData._id) {\n      history.push(\"/\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  const adddProduct = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', product.name);\n      formData.append('quantity', product.quantity);\n      formData.append('price', product.price);\n      formData.append('categoryID', product.categoryID);\n      formData.append('discount', product.discount);\n      formData.append('description', product.description);\n      formData.append('imageuploaded', product.imageuploaded);\n      formData.append('productPicture', product.productPicture);\n      let response = await addProduct(formData);\n\n      if (response.data.message === 'Product created Successfully.') {\n        setProduct({ ...product,\n          imageuploaded: 'false'\n        });\n        alert(response.data.message);\n        history.push(\"/products\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  }; //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\n\n\n  const updateProduct = async () => {\n    if (validator.allValid()) {\n      const formData = new FormData();\n      formData.append('name', product.name);\n      formData.append('quantity', product.quantity);\n      formData.append('price', product.price);\n      formData.append('categoryID', product.categoryID);\n      formData.append('discount', product.discount);\n      formData.append('description', product.description);\n      formData.append('imageuploaded', product.imageuploaded);\n      formData.append('productPicture', product.productPicture);\n      let response = await editsingleProduct(prodID, formData);\n\n      if (response.data.message === 'Product updated successfully') {\n        setProduct({ ...product,\n          imageuploaded: 'false'\n        });\n        alert(response.data.message);\n        history.push(\"/products\");\n      } else {\n        alert(response.data.message);\n      }\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  if (prodID && prodID !== undefined) {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        updateProduct();\n      },\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 20\n    }, this);\n  } else {\n    myButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mybutton\",\n      onClick: () => {\n        adddProduct();\n      },\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 20\n    }, this);\n  }\n\n  const createCategoryList = (categories, options = [], sub_mark = '') => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: sub_mark + category.name,\n        children: category.parentID\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options, sub_mark + '---');\n      }\n    }\n\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerform\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: prodID && prodID !== undefined ? \"Update Product\" : \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: product.name,\n              placeholder: \"Product Name\",\n              name: \"name\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), validator.message('name', product.name, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Product Name is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              style: {\n                marginLeft: \"15px\"\n              },\n              type: \"text\",\n              value: product.quantity,\n              placeholder: \"Quantity\",\n              name: \"quantity\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), validator.message('quantity', product.quantity, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Quantity is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'left',\n              width: '50%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              type: \"text\",\n              value: product.price,\n              placeholder: \"Product Price\",\n              name: \"price\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), validator.message('price', product.price, 'required', {\n              className: 'text-danger mywidth',\n              messages: {\n                required: \"Product Price is required\"\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              width: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"myinputclass\",\n              style: {\n                marginLeft: \"15px\"\n              },\n              type: \"text\",\n              value: product.discount,\n              placeholder: \"Discount in %\",\n              name: \"discount\",\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              width: '96%'\n            },\n            className: \"myinputclass\",\n            name: \"categoryID\",\n            value: product.categoryID,\n            onChange: inputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), createCategoryList(subcatdata).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), validator.message('categoryID', product.categoryID, 'required', {\n            className: 'text-danger mywidth',\n            messages: {\n              required: \"Category is required\"\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"description\",\n              value: product.description,\n              onChange: inputVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            minHeight: '76px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formFile\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Product Image: \\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 62\n              }, this), \"(Accept only .png, .jpg, .jpeg)\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              multiple: true,\n              name: \"productPicture\",\n              onChange: handlePhoto,\n              accept: \".png, .jpg, .jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 38\n          }, this), prodID ? product.imageuploaded && product.imageuploaded === 'true' ? \"\" : product.productPicture && product.productPicture.length > 0 ? product.productPicture.map(option => /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: process.env.React_App_PUBLIC_URL_PRODUCTS + `${option.img}`,\n            style: {\n              width: '110px',\n              margin: '5px'\n            }\n          }, option._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 45\n          }, this)) : \"\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            marginTop: '3%'\n          },\n          children: myButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            history.push(\"/products\");\n          },\n          children: \"Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddProduct, \"dNoKgH2FxaD9C7JJVZLF2QpgZus=\", false, function () {\n  return [useParams, useHistory, useValidator];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/AddProduct.js"],"names":["React","useState","useEffect","useHistory","useParams","useValidator","Form","getCategoryList","addProduct","editsingleProduct","getsingleProduct","addImages","NavbarCollapse","AddProduct","myButton","prodID","history","validator","showValidationMessage","subcatdata","setSubcatdata","product","setProduct","name","quantity","price","categoryID","discount","description","productPicture","imageuploaded","getSubcatdataList","res","data","catdata","handlePhoto","e","formData","FormData","Array","from","target","files","forEach","file","append","response","getproddata","undefined","productdata","productPictures","console","log","document","title","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","value","adddProduct","allValid","message","alert","updateProduct","createCategoryList","categories","options","sub_mark","category","children","parentID","length","width","minHeight","float","className","messages","required","marginLeft","map","option","process","env","React_App_PUBLIC_URL_PRODUCTS","img","margin","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useValidator from './useValidator'\r\nimport { Form } from 'react-bootstrap'\r\nimport { getCategoryList } from '../Services/categoryapi'\r\nimport { addProduct, editsingleProduct, getsingleProduct, addImages } from '../Services/productapi'\r\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\nconst AddProduct = () => {\r\n    let myButton = '';\r\n    let { prodID } = useParams();\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [subcatdata, setSubcatdata] = useState([]);\r\n    const [product, setProduct] = useState({\r\n        name: \"\",\r\n        quantity: \"\",\r\n        price: \"\",\r\n        categoryID: \"\",\r\n        discount: \"\",\r\n        description: \"\",\r\n        productPicture: [],\r\n        imageuploaded: 'false'\r\n    })\r\n    // Getting the Subcategory dropdown data\r\n    useEffect(() => {\r\n        const getSubcatdataList = async () => {\r\n            let res = await getCategoryList();\r\n            setSubcatdata(res.data.catdata)\r\n        }\r\n        getSubcatdataList()\r\n    }, [])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let formData = new FormData();\r\n        //let productPicturelatest = []\r\n        Array.from(e.target.files)\r\n            .forEach(file => {\r\n                formData.append('files', file);\r\n                ///productPicturelatest.push(file);\r\n                //console.log(new Date().getTime() + '-' + file.name)\r\n            });\r\n        let response = await addImages(formData);\r\n        //console.log(\"AABBCC\", response.data)\r\n        setProduct({ ...product, imageuploaded: 'true', productPicture: response.data });\r\n        //setProduct({ ...product, productPicture: productPicturelatest });\r\n    }\r\n\r\n    //console.log(\"list data\", subcatdata)\r\n    useEffect(() => {\r\n        async function getproddata() {\r\n            if (prodID && prodID !== undefined) {\r\n                //axios.get(\"http://localhost:9001/user/userdata/\" + catID).then((res) => {\r\n                let res = await getsingleProduct(prodID);\r\n                setProduct({\r\n                    name: res.data.productdata.name,\r\n                    quantity: res.data.productdata.quantity,\r\n                    price: res.data.productdata.price,\r\n                    categoryID: res.data.productdata.categoryID,\r\n                    discount: res.data.productdata.discount,\r\n                    description: res.data.productdata.description,\r\n                    productPicture: res.data.productdata.productPictures,\r\n                    imageuploaded: 'false'\r\n                })\r\n            }\r\n        }\r\n        getproddata()\r\n    }, [prodID])\r\n\r\n    console.log(product);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Add Products\";\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (!storedData._id) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [])   // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setProduct({\r\n            ...product,\r\n            [name]: value\r\n        })\r\n    }\r\n    const adddProduct = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name)\r\n            formData.append('quantity', product.quantity)\r\n            formData.append('price', product.price)\r\n            formData.append('categoryID', product.categoryID)\r\n            formData.append('discount', product.discount)\r\n            formData.append('description', product.description)\r\n            formData.append('imageuploaded', product.imageuploaded)\r\n            formData.append('productPicture', product.productPicture)\r\n            let response = await addProduct(formData);\r\n            if (response.data.message === 'Product created Successfully.') {\r\n                setProduct({ ...product, imageuploaded: 'false' });\r\n                alert(response.data.message);\r\n                history.push(\"/products\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //axios.put(`http://localhost:9001/user/editUser/${catID}`, user).then((res) => { })\r\n    const updateProduct = async () => {\r\n        if (validator.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('name', product.name)\r\n            formData.append('quantity', product.quantity)\r\n            formData.append('price', product.price)\r\n            formData.append('categoryID', product.categoryID)\r\n            formData.append('discount', product.discount)\r\n            formData.append('description', product.description)\r\n            formData.append('imageuploaded', product.imageuploaded)\r\n            formData.append('productPicture', product.productPicture)\r\n            let response = await editsingleProduct(prodID, formData);\r\n            if (response.data.message === 'Product updated successfully') {\r\n                setProduct({ ...product, imageuploaded: 'false' });\r\n                alert(response.data.message);\r\n                history.push(\"/products\");\r\n            } else {\r\n                alert(response.data.message);\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    if (prodID && prodID !== undefined) {\r\n        myButton = <div className=\"mybutton\" onClick={() => { updateProduct() }}>Update Product</div>\r\n    } else {\r\n        myButton = <div className=\"mybutton\" onClick={() => { adddProduct() }}>Add Product</div>\r\n    }\r\n\r\n    const createCategoryList = (categories, options = [], sub_mark = '') => {\r\n        for (let category of categories) {\r\n            options.push({ value: category._id, name: sub_mark + category.name, children: category.parentID });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options, sub_mark + '---')\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setProduct({...product, f_name: e.target.value})}} */}\r\n            <div className=\"centerform\">\r\n                <div className=\"register\">\r\n                    <h1>{prodID && prodID !== undefined ? \"Update Product\" : \"Add Product\"}</h1>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '50%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={product.name} placeholder=\"Product Name\" name=\"name\" onChange={inputVal} />\r\n                            {validator.message('name', product.name, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Product Name is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div style={{ float: 'right', width: '50%' }}>\r\n                            <input className=\"myinputclass\" style={{ marginLeft: \"15px\" }} type=\"text\" value={product.quantity} placeholder=\"Quantity\" name=\"quantity\" onChange={inputVal} />\r\n                            {validator.message('quantity', product.quantity, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Quantity is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <div style={{ float: 'left', width: '50%' }}>\r\n                            <input className=\"myinputclass\" type=\"text\" value={product.price} placeholder=\"Product Price\" name=\"price\" onChange={inputVal} />\r\n                            {validator.message('price', product.price, 'required', {\r\n                                className: 'text-danger mywidth',\r\n                                messages: {\r\n                                    required: \"Product Price is required\"\r\n                                }\r\n                            })}\r\n                        </div>\r\n                        <div style={{ float: 'right', width: '50%' }}>\r\n                            <input className=\"myinputclass\" style={{ marginLeft: \"15px\" }} type=\"text\" value={product.discount} placeholder=\"Discount in %\" name=\"discount\" onChange={inputVal} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <select style={{ width: '96%' }} className=\"myinputclass\" name=\"categoryID\" value={product.categoryID} onChange={inputVal}>\r\n                            <option value=\"\">Please Select Category</option>\r\n                            {\r\n                                createCategoryList(subcatdata).map(option =>\r\n                                    <option key={option.value} value={option.value}>{option.name}</option>)\r\n                            }\r\n                        </select>\r\n                        {validator.message('categoryID', product.categoryID, 'required', {\r\n                            className: 'text-danger mywidth',\r\n                            messages: {\r\n                                required: \"Category is required\"\r\n                            }\r\n                        })}\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control as=\"textarea\" rows={3} name=\"description\" value={product.description} onChange={inputVal} />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '76px' }}>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Product Image: &nbsp;<br />(Accept only .png, .jpg, .jpeg)&nbsp;&nbsp;</Form.Label>\r\n                            <Form.Control type=\"file\" multiple name=\"productPicture\" onChange={handlePhoto} accept=\".png, .jpg, .jpeg\" />\r\n                        </Form.Group><br />\r\n\r\n                        {\r\n                            prodID ?\r\n                                product.imageuploaded && product.imageuploaded === 'true' ?\r\n                                \"\" :\r\n                                    product.productPicture && product.productPicture.length > 0 ?\r\n                                        product.productPicture.map(option =>\r\n                                            <img key={option._id} alt=\"\" src={process.env.React_App_PUBLIC_URL_PRODUCTS + `${option.img}`} style={{ width: '110px', margin: '5px' }} />\r\n                                        )\r\n                                    : \"\"\r\n                            : \"\"\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', marginTop: '3%' }}>\r\n                        {myButton}\r\n                    </div>\r\n                    <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/products\") }}>Back </div>\r\n                    {/*<div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/login\") }}>Login </div>*/}\r\n                    {/* OR <Link to=\"/login\">Login</Link> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}