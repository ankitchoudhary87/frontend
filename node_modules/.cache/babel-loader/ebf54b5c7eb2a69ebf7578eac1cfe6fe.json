{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Login_Register_App\\\\login-and-register-frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom'; //import axios from 'axios';\n\nimport { Button, Spinner } from 'react-bootstrap'; //import SimpleReactValidator from 'simple-react-validator';\n\nimport useValidator from './useValidator';\nimport { adminLogin } from '../Services/userapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory(); //const validator = new SimpleReactValidator();\n\n  const [validator, showValidationMessage] = useValidator();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n\n    if (storedData._id && storedData._id !== \"\") {\n      history.push(\"/\");\n    } else {\n      history.push(\"/login\");\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const inputVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  }; //axios.post(\"http://localhost:9001/user/login\", user).then((res) => { })\n\n\n  const loginUser = async () => {\n    if (validator.allValid()) {\n      setLoading(true);\n      let res = await adminLogin(user);\n\n      if (res.data.message === \"Login Successfully\") {\n        alert(res.data.message);\n        props.updateUserinlocalStorage(res.data.user);\n        history.push(\"/\");\n      } else {\n        alert(res.data.message);\n      }\n\n      setLoading(false);\n    } else {\n      showValidationMessage(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outsider\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.email,\n          placeholder: \"Email Address\",\n          name: \"email\",\n          onChange: inputVal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), validator.message('email', user.email, 'required|email', {\n          className: 'text-danger',\n          messages: {\n            required: \"Email is required\"\n          }\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: user.password,\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: inputVal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), validator.message('password', user.password, 'required|min:6|max:12', {\n          className: 'text-danger',\n          messages: {\n            required: \"Password is required\"\n          }\n        }), !loading ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            loginUser();\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          disabled: true,\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"grow\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), \"Loading...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this), \"Forgot Password \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot\",\n          children: \"Click Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"IirGZL0ayEpo0H3SsaFqK0OmEPc=\", false, function () {\n  return [useHistory, useValidator];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Projects/Login_Register_App/login-and-register-frontend/src/components/Login.js"],"names":["React","useState","useEffect","useHistory","Link","Button","Spinner","useValidator","adminLogin","Login","props","history","validator","showValidationMessage","loading","setLoading","user","setUser","email","password","storedData","JSON","parse","localStorage","getItem","_id","push","inputVal","e","name","value","target","loginUser","allValid","res","data","message","alert","updateUserinlocalStorage","className","messages","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport { Button, Spinner } from 'react-bootstrap'\r\n//import SimpleReactValidator from 'simple-react-validator';\r\nimport useValidator from './useValidator'\r\nimport { adminLogin } from '../Services/userapi'\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    //const validator = new SimpleReactValidator();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (storedData._id && storedData._id !== \"\") {\r\n            history.push(\"/\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    //axios.post(\"http://localhost:9001/user/login\", user).then((res) => { })\r\n    const loginUser = async () => {\r\n        if (validator.allValid()) {\r\n            setLoading(true);\r\n            let res = await adminLogin(user);\r\n            if (res.data.message === \"Login Successfully\") {\r\n                alert(res.data.message)\r\n                props.updateUserinlocalStorage(res.data.user);\r\n                history.push(\"/\");\r\n            } else {\r\n                alert(res.data.message)\r\n            }\r\n            setLoading(false);\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {/* onChange={(e)=>{setUser({...user, f_name: e.target.value})}} */}\r\n            <div className=\"outsider\">\r\n                <div className=\"login\">\r\n                    <h2>Login</h2>\r\n                    <input type=\"text\" value={user.email} placeholder=\"Email Address\" name=\"email\" onChange={inputVal} />\r\n                    {/**********   This is where the magic happens     ***********/}\r\n                    {validator.message('email', user.email, 'required|email', {\r\n                        className: 'text-danger',\r\n                        messages: {\r\n                            required: \"Email is required\"\r\n                        }\r\n                    })}\r\n\r\n                    <input type=\"password\" value={user.password} placeholder=\"Password\" name=\"password\" onChange={inputVal} />\r\n                    {validator.message('password', user.password, 'required|min:6|max:12', {\r\n                        className: 'text-danger',\r\n                        messages: {\r\n                            required: \"Password is required\"\r\n                        }\r\n                    })}\r\n\r\n\r\n                    {!loading ? <Button onClick={() => { loginUser() }}>Login</Button> : <Button variant=\"primary\" disabled>\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        Loading...\r\n                    </Button>}\r\n                    <br /><br />\r\n                    Forgot Password <Link to=\"/forgot\">Click Here</Link>\r\n                    {/* <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/register\") }}>Register  OR <Link to=\"/register\">Register</Link> </div>\r\n                    */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}