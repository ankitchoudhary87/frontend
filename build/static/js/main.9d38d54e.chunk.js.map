{"version":3,"sources":["components/Topnav.js","components/useValidator.js","Services/userapi.js","components/Dashboard.js","components/Tasklist.js","components/Searchbar.js","components/Dashboardgh.js","components/Login.js","components/PagenotFound404.js","components/Test.js","subscription.js","components/Pushnotification.js","App.js","serviceWorker.js","index.js"],"names":["Topnav","props","storedData","JSON","parse","localStorage","getItem","Navbar","collapseOnSelect","expand","style","backgroundColor","boxShadow","fixed","Container","src","alt","Toggle","Collapse","id","Nav","className","Link","fontWeight","loggedinuser","name","onClick","logout","useValidator","customMessage","customValidator","useState","show","setShow","validator","SimpleReactValidator","messages","validators","showMessages","usersUrl","adminLogin","user","a","axios","post","addTasklist","tasklist","ghUserData","userid","Dashboard","useCookies","cookies","setCookie","loggedInUserId","user_id","path","showValidationMessage","loading","setLoading","tasklistname","taskchallenge","setTasklist","useEffect","inputVal","e","target","value","submittasklist","preventDefault","allValid","res","data","message","alert","maxWidth","onSubmit","display","justifyContent","fontSize","height","placeholder","onChange","required","Button","variant","marginTop","width","background","borderRadius","border","padding","lineHeight","cursor","textTransform","color","disabled","Spinner","as","animation","size","role","type","nl2br","require","Tasklist","Fragment","dateblock","date","tasklist1","textAlign","tasklist2","tasklist3","Searchbar","float","selected","start_date","onchange","maxDate","Date","end_date","marginLeft","resource","AllUserlistdata","map","userdropdata","loader","datasevendays","getUserList","Dashboardgh","setLoader","userlist","setUserlist","dateseven","setDateseven","AllUserlist","setAllUserlist","getTime","gh_id","searchval","setSearchval","no_of_days","today","dd","mm","result","getDifferenceInDays","datconverted","i","d","setDate","getDate","getMonth","datefinal","getFullYear","push","userdatalist","userdata","tasklistdata","overflow","newValue","statename","Table","striped","bordered","hover","dataval","indexdate","colSpan","index","employee_code","taskdata","indextask","Login","history","useHistory","email","password","setUser","loginUser","updateUserinlocalStorage","autoComplete","Page_not_found_404","to","Test","datesevenmanas","setDatesevenmanas","date1","date2","console","log","Math","abs","start_date_new","dd_new","mm_new","yyyy_new","end_date_new","dd_new_end","mm_new_end","yyyy_new_end","startDate","endDate","dates","currentDate","addDays","days","this","valueOf","call","getDates","datenew","toString","convertedVapidKey","base64String","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","charCodeAt","urlBase64ToUint8Array","process","sendSubscription","subscription","fetch","method","body","stringify","subdata","cokkID","headers","subscribeUser","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","catch","Notification","permission","error","Pushnotification","App","logUser","setLogUser","setItem","clear","exact","gh","dated","today_date","dd_date","String","padStart","mm_date","yyyy_date","PagenotFound404","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d38d54e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap'\r\nfunction Topnav(props) {\r\n  const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" style={{ backgroundColor: '#fff', boxShadow:'0px 1px 4px rgb(131 131 131 / 16%)' }} fixed=\"top\">\r\n      <Container>\r\n        <img src=\"http://att.synapseindia.com/images/logo.png\" alt=\"Logo\" />\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n          </Nav>\r\n          {storedData ?\r\n            <Nav>\r\n              <Nav.Link style={{ fontWeight: '500' }}>Welcome, {props.loggedinuser.name}</Nav.Link>\r\n              <Nav.Link onClick={() => { props.logout() }} className=\"logoutbutton\">Logout &nbsp;&nbsp;&nbsp;&nbsp;</Nav.Link>\r\n            </Nav> : \"\"\r\n          }\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\nexport default Topnav","import { useState } from 'react'\r\nimport SimpleReactValidator from 'simple-react-validator'\r\n\r\nconst useValidator = (customMessage = {}, customValidator = {}) => {\r\n  const [show, setShow] = useState(false)\r\n  const validator = new SimpleReactValidator({\r\n    messages: customMessage, \r\n    validators: customValidator\r\n  }) \r\n\r\n  if (show) {\r\n    validator.showMessages()\r\n  }\r\n\r\n  return [validator, setShow]\r\n}\r\n\r\nexport default useValidator","import axios from 'axios';\r\nconst usersUrl = 'http://localhost:9001/user';\r\n\r\nexport const adminLogin = async (user) => {\r\n    return await axios.post(`${usersUrl}/login/`, user)\r\n}\r\n\r\nexport const addTasklist = async (tasklist) => {\r\n    return await axios.post(`${usersUrl}/tasklistAdd/`, tasklist)\r\n}\r\n\r\nexport const ghUserData = async (userid) => {\r\n    return await axios.post(`${usersUrl}/ghUserList/`,userid);\r\n}\r\n\r\nexport const getsingleUsers = async (userID) => {\r\n    return await axios.get(`${usersUrl}/userdata/${userID}`);\r\n}\r\n\r\nexport const addUsers = async (user) => {\r\n    return await axios.post(`${usersUrl}/addUser`, user);\r\n}\r\n\r\nexport const editUsers = async (userID, user) => {\r\n    return await axios.put(`${usersUrl}/editUser/${userID}`, user)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport useValidator from './useValidator'\r\nimport { addTasklist } from '../Services/userapi'\r\nimport { useCookies } from 'react-cookie';\r\nconst Dashboard = (props) => {\r\n    const [cookies, setCookie] = useCookies([]);\r\n    let loggedInUserId = \"\";\r\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n    if (storedData) {\r\n        loggedInUserId = storedData.user_id;\r\n        if(!cookies.userid){\r\n            setCookie('userid', loggedInUserId, { path: '/' });\r\n        }\r\n    }\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [loading, setLoading] = useState(false);\r\n    const [tasklist, setTasklist] = useState({\r\n        tasklistname: \"\",\r\n        taskchallenge: \"\",\r\n        user_id: \"\"\r\n    })\r\n    \r\n    // set the props as a default user_id in tasklist state\r\n    useEffect(() => {\r\n        if (props.loggedinuser.user_id) {\r\n            setTasklist({ ...tasklist, user_id: props.loggedinuser.user_id });\r\n        }\r\n    }, [props.loggedinuser.user_id]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setTasklist({\r\n            ...tasklist,\r\n            [name]: value\r\n        })\r\n    }\r\n    const submittasklist = async (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setLoading(true);\r\n            let res = await addTasklist(tasklist);\r\n            if (res.data.message === \"Tasklist Added Successfully\") {\r\n                alert(res.data.message)\r\n                setLoading(false);\r\n                setTasklist({\r\n                    tasklistname: \"\",\r\n                    taskchallenge: \"\",\r\n                    user_id: props.loggedinuser.user_id\r\n                })\r\n            } else {\r\n                setLoading(false);\r\n                alert(res.data.message)\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    //console.log(\"AAAA\", tasklist)\r\n    return (\r\n        <>\r\n            <div className=\"outsider\">\r\n                <div className=\"login\" style={{ maxWidth: '70%' }}>\r\n                    <form onSubmit={(e) => { submittasklist(e) }}>\r\n                        <div style={{ display: 'flex', justifyContent: 'center', fontSize: '18px' }}>Enter Your Tasklist and Task Challenge</div>\r\n                        <textarea style={{ height: '120px' }} className=\"newinputval\" value={tasklist.tasklistname} placeholder=\"Enter your tasklist\" name=\"tasklistname\" onChange={inputVal} />\r\n                        {/**********   This is where the magic happens     ***********/}\r\n                        {validator.message('tasklistname', tasklist.tasklistname, 'required', {\r\n                            className: 'text-danger spaceparttasklist',\r\n                            messages: {\r\n                                required: \"Tasklist is required\"\r\n                            }\r\n                        })}\r\n\r\n                        <textarea style={{ height: '100px' }} className=\"newinputval\" value={tasklist.taskchallenge} placeholder=\"Enter your task challenge\" name=\"taskchallenge\" onChange={inputVal} />\r\n                        {/*validator.message('taskchallenge', tasklist.taskchallenge, 'required', {\r\n                            className: 'text-danger spaceparttasklist',\r\n                            messages: {\r\n                                required: \"Task challenge is required\"\r\n                            }\r\n                        })*/}\r\n\r\n                        {!loading ? <Button type=\"submit\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Add Tasklist</Button> : <Button variant=\"primary\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard;","import React from 'react'\r\nconst nl2br = require('react-nl2br');\r\nconst Tasklist = (props) => {\r\n    //console.log(props.tasklist.user_id)\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.dateblock === props.tasklist.date ? props.userid === props.tasklist.user_id ?\r\n                        <>\r\n                            {(() => {\r\n                                if (props.tasklist.tasklist1 && props.tasklist.tasklist1 !== '') {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>{nl2br(props.tasklist.tasklist1)}</td>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>N/A</td>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                            {(() => {\r\n                                if (props.tasklist.tasklist2 && props.tasklist.tasklist2 !== '') {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>{nl2br(props.tasklist.tasklist2)}</td>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>N/A</td>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                           {(() => {\r\n                                if (props.tasklist.tasklist3 && props.tasklist.tasklist3 !== '') {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>{nl2br(props.tasklist.tasklist3)}</td>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <td style={{ padding: '10px', textAlign: 'left' }}>N/A</td>\r\n                                    )\r\n                                }\r\n                            })()}\r\n                        </> :\"\" :\"\"\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Tasklist;","import DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nconst Searchbar = (props) => {\r\n    return (\r\n        <>\r\n            <div style={{ width: '100%' }}>\r\n                <div style={{ width: '45%', float: 'left' }}>\r\n                    <div style={{ width: '20%', float: 'left', padding: '0.9rem 0.2rem' }}>\r\n                        <b>Date Range: </b>\r\n                    </div>\r\n                    <div style={{ width: '40%', float: 'left' }}>\r\n                        <DatePicker className=\"myinputclass\" placeholder=\"From Date\" name=\"start_date\" selected={props.start_date} onChange={(date) => { props.onchange(date, \"start_date\") }} maxDate={new Date()} />\r\n                    </div>\r\n                    <div style={{ width: '40%', float: 'left' }}>\r\n                        <DatePicker className=\"myinputclass\" placeholder=\"To Date\" name=\"end_date\" selected={props.end_date} onChange={(date) => { props.onchange(date, \"end_date\") }} maxDate={new Date()} />\r\n                    </div>\r\n                </div>\r\n                <div style={{ width: '38%', float: 'left' }}>\r\n                    <div style={{ width: '18%', float: 'left', padding: '0.9rem 0rem', marginLeft: '25px' }}>\r\n                        <b>Members: </b>\r\n                    </div>\r\n                    <div style={{ width: '75%', float: 'left' }}>\r\n                        <select style={{ width: '95%' }} className=\"myinputclass\" name=\"resource\" value={props.resource} onChange={(e) => { props.onchange(e.target.value, \"resource\") }}>\r\n                            <option value=\"\">Please Select Team Member</option>\r\n                            {\r\n                                props.AllUserlistdata.map((userdropdata) =>\r\n                                    <option key={userdropdata.user_id} value={userdropdata.user_id}>{userdropdata.name}</option>)\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div style={{ width: '15%', float: 'right' }}>\r\n                    {!props.loader ?\r\n                        <Button onClick={() => { props.datasevendays(); props.getUserList(); }} type=\"submit\" style={{ marginTop: '10px', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '12px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Search</Button>\r\n                        :\r\n                        <Button variant=\"primary\" style={{ marginTop: '10px', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '12px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Searchbar;","import React, { useState, useEffect } from 'react'\r\nimport { Table, Container } from 'react-bootstrap'\r\nimport { ghUserData } from '../Services/userapi'\r\nimport Tasklist from '../components/Tasklist';\r\nimport Searchbar from '../components/Searchbar';\r\nimport { useCookies } from 'react-cookie';\r\nconst Dashboardgh = (props) => {\r\n    const [cookies, setCookie] = useCookies([]);\r\n    let loggedInUserId = \"\";\r\n    const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n    if (storedData) {\r\n        loggedInUserId = storedData.user_id;\r\n        if(!cookies.userid){\r\n            setCookie('userid', loggedInUserId, { path: '/' });\r\n        }\r\n    }\r\n    const [loader, setLoader] = useState(false);\r\n    const [userlist, setUserlist] = useState([]);\r\n    const [dateseven, setDateseven] = useState([]);\r\n    const [tasklist, setTasklist] = useState([]);\r\n    const [AllUserlist, setAllUserlist] = useState([]);\r\n    const [searchval, setSearchval] = useState({\r\n        start_date: new Date(new Date().getTime() - (6 * 24 * 60 * 60 * 1000)),\r\n        end_date: new Date(),\r\n        resource: \"\",\r\n        gh_id: loggedInUserId\r\n    })\r\n    const statefromchild = (newValue, statename) => {\r\n        setSearchval({\r\n            ...searchval,\r\n            [statename]: newValue\r\n        })\r\n    }\r\n    const datasevendays = () => {\r\n        var no_of_days;\r\n        var today; var dd; var mm; var yyyy;\r\n        var result = [];\r\n        if ((searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null) && (searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(searchval.end_date)));\r\n            today = props.datconverted(new Date(searchval.end_date));\r\n        } else if ((searchval.start_date && searchval.start_date !== '' && searchval.start_date !== null) && (searchval.end_date === '' || searchval.end_date === null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(searchval.start_date)), new Date(props.datconverted(new Date())));\r\n            today = props.datconverted(new Date());\r\n        } else if ((searchval.start_date === '' || searchval.start_date === null) && (searchval.end_date && searchval.end_date !== '' && searchval.end_date !== null)) {\r\n            no_of_days = props.getDifferenceInDays(new Date(props.datconverted(new Date(searchval.end_date.getTime() - (30 * 24 * 60 * 60 * 1000)))), new Date(props.datconverted(searchval.end_date)));\r\n            today = props.datconverted(new Date(searchval.end_date));\r\n        } else {\r\n            no_of_days = '6';\r\n            today = props.datconverted(new Date());\r\n        }\r\n        //alert(no_of_days)\r\n        for (var i = 0; i <= no_of_days; i++) {\r\n            var d = new Date(today);\r\n            d.setDate(d.getDate() - i);\r\n            dd = d.getDate();\r\n            mm = d.getMonth() + 1;\r\n            yyyy = d.getFullYear();\r\n            if (dd < 10) { dd = '0' + dd }\r\n            if (mm < 10) { mm = '0' + mm }\r\n            var datefinal = yyyy + '-' + mm + '-' + dd;\r\n            result.push(datefinal)\r\n        }\r\n        setDateseven(result);\r\n    }\r\n    /*useEffect(() => {\r\n        datasevendays();\r\n    }, [])*/\r\n    const getUserList = async () => {\r\n        setLoader(true);\r\n        //alert(\"Now Loader turn off\");\r\n        let res = await ghUserData(searchval);\r\n        //console.log(res.data.tasklistdata)\r\n        if (res.data.message === 'user list fetched') {\r\n            setAllUserlist(res.data.userdatalist)\r\n            setUserlist(res.data.userdata)\r\n            setTasklist(res.data.tasklistdata)\r\n        } else {\r\n            alert(res.data.message)\r\n        }\r\n        setLoader(false)\r\n    }\r\n    useEffect(() => {\r\n        datasevendays();\r\n        getUserList();\r\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n    //console.log(searchval);\r\n    return (\r\n        <>\r\n            <div className=\"login\" style={{ marginTop: '90px', width: '95%', overflow: 'overlay', maxWidth: '95%' }}>\r\n                <Searchbar start_date={searchval.start_date} end_date={searchval.end_date} resource={searchval.resource} onchange={statefromchild} datasevendays={datasevendays} getUserList={getUserList} AllUserlistdata={AllUserlist} loader={loader} />\r\n            </div>\r\n            {  loader ? <Container style={{ textAlign: 'center' }}><img src=\"/images/ajax-spinner.gif\" alt=\"Loader\" /></Container> :\r\n            <div className=\"outsider\" style={{ marginTop: '-75px' }}>\r\n                <div className=\"login scroll\" style={{ maxWidth: '95%' }}>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>Team Members</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>12PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>3PM</th>\r\n                                <th style={{ width: '25%', textAlign: 'center' }}>6PM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                dateseven.map((dataval, indexdate) =>\r\n                                    <React.Fragment key={indexdate}>\r\n                                        <tr>\r\n                                            <th style={{ textAlign: 'center', backgroundColor: 'lightskyblue' }} colSpan=\"4\">{dataval}</th>\r\n                                        </tr>\r\n                                        {\r\n                                            userlist.map((userdata, index) =>\r\n                                                <React.Fragment key={index}>\r\n                                                    <tr>\r\n                                                        <td>{userdata.name}&nbsp;({userdata.employee_code})</td>\r\n                                                        {\r\n                                                            tasklist.map((taskdata, indextask) =>\r\n                                                                <Tasklist key={indextask} dateblock={dataval} userid={userdata.user_id} tasklist={taskdata} />\r\n                                                            )\r\n                                                        }\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td colSpan=\"4\"></td>\r\n                                                    </tr>\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\nexport default Dashboardgh;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport useValidator from './useValidator'\r\nimport { adminLogin } from '../Services/userapi';\r\nconst Login = (props) => {\r\n    const history = useHistory();\r\n    const [validator, showValidationMessage] = useValidator()\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\r\n        if (storedData) {\r\n            history.push(\"/\");\r\n        } else {\r\n            history.push(\"/login\");\r\n        }\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n    const inputVal = (e) => {\r\n        const { name, value } = e.target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    //axios.post(\"http://localhost:9001/user/login\", user).then((res) => { })\r\n    const loginUser = async (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setLoading(true);\r\n            let res = await adminLogin(user);\r\n            if (res.data.message === \"Login Successfully\") {\r\n                alert(res.data.message)\r\n                props.updateUserinlocalStorage(res.data.user);\r\n                setLoading(false);\r\n                history.push(\"/\");\r\n            } else {\r\n                setLoading(false);\r\n                alert(res.data.message)\r\n            }\r\n        } else {\r\n            showValidationMessage(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={(e) => { loginUser(e) }}>\r\n                {/* onChange={(e)=>{setUser({...user, f_name: e.target.value})}} */}\r\n                <div className=\"outsider\">\r\n                    <div className=\"login\">\r\n                        <div className=\"user_img\"></div>\r\n                        <br />\r\n\r\n                        <input className=\"newinputval\" type=\"text\" value={user.email} placeholder=\"Enter your username\" name=\"email\" onChange={inputVal} />\r\n                        {/**********   This is where the magic happens     ***********/}\r\n                        {validator.message('email', user.email, 'required', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Username is required\"\r\n                            }\r\n                        })}\r\n\r\n                        <input className=\"newinputval\" type=\"password\" value={user.password} autoComplete=\"on\" placeholder=\"Enter your password\" name=\"password\" onChange={inputVal} />\r\n                        {validator.message('password', user.password, 'required|min:4|max:12', {\r\n                            className: 'text-danger spacepart',\r\n                            messages: {\r\n                                required: \"Password is required\"\r\n                            }\r\n                        })}\r\n\r\n\r\n                        { /* onClick={(e) => { loginUser(e) }} */}\r\n                        {!loading ? <Button type=\"submit\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }}>Login</Button> : <Button variant=\"primary\" style={{ marginTop: '15px', width: 'auto', background: 'rgba(237, 28, 36, 1)', borderRadius: '3px', border: '0 none', padding: '15px 42px', fontSize: '16px', fontWeight: '500', lineHeight: '16px', cursor: 'pointer', textTransform: 'capitalize', color: 'rgba(255, 255, 255, 1)' }} disabled>\r\n                            <Spinner\r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            Loading...\r\n                        </Button>}\r\n                        <br />\r\n                        {/* <div>OR</div>\r\n                    <div className=\"button\" onClick={() => { history.push(\"/register\") }}>Register  OR <Link to=\"/register\">Register</Link> </div>\r\n                    */}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Page_not_found_404() {\r\n  return (\r\n      <div style={{marginTop:'150px'}}>\r\n        <h2>404 Error</h2>\r\n        <h4>This Page is not found. <Link to=\"/\">Click here</Link> go to the Home Page</h4>\r\n      </div>\r\n  );\r\n}\r\nexport default Page_not_found_404;","import React, { useEffect, useState } from 'react';\r\nconst Test = () => {\r\n    const [datesevenmanas, setDatesevenmanas] = useState([]);\r\n    var start_date = new Date(new Date().getTime() - (6 * 24 * 60 * 60 * 1000));\r\n    var end_date = new Date();\r\n    function getDifferenceInDays(date1, date2) {\r\n        const diffInMs = Math.abs(date2 - date1);\r\n        return diffInMs / (1000 * 60 * 60 * 24);\r\n      }\r\n    const date1 = new Date('09/24/2021');\r\n    const date2 = new Date('10/01/2021');\r\n    console.log(getDifferenceInDays(date1, date2));\r\n\r\n    function getDates(startDate, endDate) {\r\n        const dates = []\r\n        let currentDate = startDate\r\n        const addDays = function (days) {\r\n            const date = new Date(this.valueOf())\r\n            date.setDate(date.getDate() + days)\r\n            return date\r\n        }\r\n        while (currentDate <= endDate) {\r\n            dates.push(currentDate)\r\n            currentDate = addDays.call(currentDate, 1)\r\n        }\r\n        setDatesevenmanas(dates);\r\n    }\r\n    useEffect(() => {\r\n        var start_date_new;\r\n        var dd_new;\r\n        var mm_new;\r\n        var yyyy_new;\r\n        var end_date_new;\r\n        var dd_new_end;\r\n        var mm_new_end;\r\n        var yyyy_new_end;\r\n        if ((start_date && start_date !== '' && start_date !== null) && (end_date && end_date !== '' && end_date !== null)) {\r\n            start_date_new = start_date\r\n            dd_new = start_date_new.getDate();\r\n            mm_new = start_date_new.getMonth() + 1;\r\n            if (dd_new < 10) { dd_new = '0' + dd_new }\r\n            if (mm_new < 10) { mm_new = '0' + mm_new }\r\n            yyyy_new = start_date_new.getFullYear();\r\n\r\n            end_date_new = end_date\r\n            dd_new_end = end_date_new.getDate();\r\n            mm_new_end = end_date_new.getMonth() + 1;\r\n            if (dd_new_end < 10) { dd_new_end = '0' + dd_new_end }\r\n            if (mm_new_end < 10) { mm_new_end = '0' + mm_new_end }\r\n            yyyy_new_end = end_date_new.getFullYear();\r\n        } else {\r\n            start_date_new = new Date();\r\n            dd_new = start_date_new.getDate();\r\n            mm_new = start_date_new.getMonth() + 1;\r\n            yyyy_new = start_date_new.getFullYear();\r\n\r\n            end_date_new = new Date(new Date().getTime() - (7 * 24 * 60 * 60 * 1000));\r\n            dd_new_end = end_date_new.getDate();\r\n            mm_new_end = end_date_new.getMonth() + 1;\r\n            yyyy_new_end = end_date_new.getFullYear();\r\n\r\n        }\r\n       // console.log(\"From Date\", yyyy_new, mm_new, dd_new);\r\n        //console.log(\"To Date\", yyyy_new_end, mm_new_end, dd_new_end);\r\n        getDates(new Date(yyyy_new, mm_new, dd_new), new Date(yyyy_new_end, mm_new_end, dd_new_end));\r\n    }, [])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    //console.log(\"Manas\", datesevenmanas);\r\n\r\n    return (\r\n        <>\r\n            <h1>Hello</h1>\r\n            <div style={{marginTop:'70px'}}>\r\n                {\r\n                    datesevenmanas.map((datenew, index) =>\r\n                        <h5 key={index}>{datenew.toString()}</h5>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Test;","const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\nconst usersUrl = 'http://localhost:9001/user';\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction sendSubscription(subscription) {\n  return fetch(`${usersUrl}/notifications`, {\n    method: 'POST',\n    body: JSON.stringify({subdata: subscription, cokkID: 2012}),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\nexport function subscribeUser() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function(registration) {\n      if (!registration.pushManager) {\n        console.log('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\n        if (existedSubscription === null) {\n          console.log('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function(newSubscription) {\n            console.log('New subscription added.')\n            sendSubscription(newSubscription)\n          }).catch(function(e) {\n            if (Notification.permission !== 'granted') {\n              console.log('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          console.log('Existed subscription detected.')\n          sendSubscription(existedSubscription)\n        }\n      })\n    })\n      .catch(function(e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}\n","//import addNotification from 'react-push-notification';\r\n\r\nimport { subscribeUser } from '../subscription';\r\n\r\nconst Pushnotification = () => {\r\n    \r\n    \r\n    subscribeUser()\r\n\r\n    return (\r\n        <div style={{marginTop:'150px'}}>\r\n            \r\n           Hello world.\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Pushnotification;","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Topnav from './components/Topnav';\nimport Dashboard from './components/Dashboard';\nimport Dashboardgh from './components/Dashboardgh'\nimport Login from './components/Login';\nimport PagenotFound404 from './components/PagenotFound404';\nimport Test from './components/Test';\nimport Pushnotification from './components/Pushnotification';\nfunction App() {\n  const [logUser, setLogUser] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    setLogUser(JSON.parse(localStorage.getItem(\"MyUser\")));\n  }, [])\n  const updateUserinlocalStorage = (user) => {\n    localStorage.setItem(\"MyUser\", JSON.stringify(user));\n    setLogUser(user);\n  }\n  const logout = () => {\n    localStorage.clear();\n    setLogUser({});\n    history.push(\"/\");\n  }\n  const datconverted = (dated) => {\n    var today_date = dated;\n    var dd_date = String(today_date.getDate()).padStart(2, '0');\n    var mm_date = String(today_date.getMonth() + 1).padStart(2, '0');\n    var yyyy_date = today_date.getFullYear();\n    today_date = mm_date + '/' + dd_date + '/' + yyyy_date;\n    return today_date;\n  }\n  const getDifferenceInDays = (start_date, end_date) => {\n    const diffInMs = Math.abs(end_date - start_date);\n    return diffInMs / (1000 * 60 * 60 * 24);\n  }\n  const storedData = JSON.parse(localStorage.getItem(\"MyUser\"));\n  return (\n    <div className=\"App\">\n      <Topnav loggedinuser={logUser} logout={logout} />\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          {\n            storedData ? storedData.gh && storedData.gh === 1 ? <Dashboardgh loggedinuser={logUser} datconverted={datconverted} getDifferenceInDays={getDifferenceInDays} /> : <Dashboard loggedinuser={logUser} /> : <Login updateUserinlocalStorage={updateUserinlocalStorage} />\n          }\n        </Route>\n        <Route path=\"/login\"><Login updateUserinlocalStorage={updateUserinlocalStorage} /></Route>\n\n        <Route path=\"/test\"><Test updateUserinlocalStorage={updateUserinlocalStorage} /></Route>\n        <Route path=\"/pushnote\"><Pushnotification /></Route>\n        <Route path=\"*\"><PagenotFound404 /></Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swFileName = process.env.NODE_ENV === 'production' ? 'service-worker.js' : 'custom-sw.js'\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { subscribeUser } from './subscription';\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\nserviceWorker.register();\nsubscribeUser()"],"sourceRoot":""}